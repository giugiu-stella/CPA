[{"/home/yanis/FAC/CPAProjet/canvas/src/index.tsx":"1","/home/yanis/FAC/CPAProjet/canvas/src/reportWebVitals.ts":"2","/home/yanis/FAC/CPAProjet/canvas/src/App.tsx":"3","/home/yanis/FAC/CPAProjet/canvas/src/components/loader/index.tsx":"4","/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/index.tsx":"5","/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/conf.ts":"6","/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/state.ts":"7","/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/renderer.ts":"8","/home/yanis/FAC/cpaProjetFinal/CPA/src/index.tsx":"9","/home/yanis/FAC/cpaProjetFinal/CPA/src/reportWebVitals.ts":"10","/home/yanis/FAC/cpaProjetFinal/CPA/src/App.tsx":"11","/home/yanis/FAC/cpaProjetFinal/CPA/src/components/loader/index.tsx":"12","/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/index.tsx":"13","/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/conf.ts":"14","/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/state.ts":"15","/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/renderer.ts":"16"},{"size":500,"mtime":1680786159259,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1680786159259,"results":"19","hashOfConfig":"18"},{"size":629,"mtime":1680786159259,"results":"20","hashOfConfig":"18"},{"size":176,"mtime":1680786159259,"results":"21","hashOfConfig":"18"},{"size":5045,"mtime":1680786676619,"results":"22","hashOfConfig":"18"},{"size":134,"mtime":1680786159259,"results":"23","hashOfConfig":"18"},{"size":3568,"mtime":1680786738511,"results":"24","hashOfConfig":"18"},{"size":2770,"mtime":1680786708303,"results":"25","hashOfConfig":"18"},{"size":500,"mtime":1680786159259,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1680786159259,"results":"28","hashOfConfig":"27"},{"size":629,"mtime":1680786159259,"results":"29","hashOfConfig":"27"},{"size":176,"mtime":1680786159259,"results":"30","hashOfConfig":"27"},{"size":5045,"mtime":1680786676619,"results":"31","hashOfConfig":"27"},{"size":134,"mtime":1680786159259,"results":"32","hashOfConfig":"27"},{"size":3568,"mtime":1680786738511,"results":"33","hashOfConfig":"27"},{"size":2770,"mtime":1680786708303,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ouf15t",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z7m1lp",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yanis/FAC/CPAProjet/canvas/src/index.tsx",[],"/home/yanis/FAC/CPAProjet/canvas/src/reportWebVitals.ts",[],"/home/yanis/FAC/CPAProjet/canvas/src/App.tsx",[],"/home/yanis/FAC/CPAProjet/canvas/src/components/loader/index.tsx",[],"/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/index.tsx",["69","70","71"],"import * as conf from './conf'\nimport { useRef, useEffect } from 'react'\nimport { State, step, click, mouseMove, endOfGame, clickEnd } from './state'\nimport { render, RenderProps } from './renderer'\n\nconst randomInt = (max: number) => Math.floor(Math.random() * max)\nconst randomSign = () => Math.sign(Math.random() - 0.5)\n\nconst initCanvas =\n  (iterate: (ctx: CanvasRenderingContext2D) => void) =>\n  (canvas: HTMLCanvasElement) => {\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    requestAnimationFrame(() => iterate(ctx))\n  }\n\nconst Canvas = ({ height, width }: { height: number; width: number }) => {\n  const initialState: State = {\n    pos: new Array(20).fill(1).map((_) => ({\n      life: conf.BALLLIFE,\n      coord: {\n        x: randomInt(width - 120) + 60,\n        y: randomInt(height - 120) + 60,\n        dx: 4 * randomSign(),\n        dy: 4 * randomSign(),\n      },\n    })),\n    player: {\n      life: conf.PLAYERLIFE,\n      coord: {\n        x: randomInt(width - 120) + 60,\n        y: randomInt(height - 120) + 60,\n        dx: 0,\n        dy: 0,\n      },\n    },\n    size: { height, width },\n    endOfGame: true,\n  }\n\n  const ref = useRef<any>()\n  const state = useRef<State>(initialState)\n  const scaleRef = useRef<number>(1)\n  const posRef = useRef<{ x: number; y: number }>({ x: 0, y: 0 })\n  const drag = useRef<boolean>(false)\n  const dragStart = useRef<{ x: number; y: number }>({ x: 0, y: 0 })\n  const downTS = useRef<number>(Date.now())\n\n  const iterate = (ctx: CanvasRenderingContext2D) => {\n    state.current = step(state.current)\n    state.current.endOfGame = !endOfGame(state.current)\n    render(ctx, {\n      pos: posRef.current,\n      scale: scaleRef.current,\n    })(state.current)\n    if (!state.current.endOfGame) requestAnimationFrame(() => iterate(ctx))\n  }\n\n  const onClick = (e: PointerEvent) => {\n    state.current = click(state.current)(e)\n  }\n\n  const onClickEnd = (e: PointerEvent) => {\n    state.current = clickEnd(state.current)(e)\n  }\n\n  const onMove = (e: PointerEvent) => {\n    state.current = mouseMove(state.current)(e)\n  }\n\n  useEffect(() => {\n    const onWheel = (e: WheelEvent) => {\n      const { offsetX, offsetY, deltaY } = e\n      const zoomFactor = 0.98\n      if (scaleRef.current > 0.5 || deltaY < 0) {\n        const factor = e.deltaY > 0 ? zoomFactor : 1 / zoomFactor\n        scaleRef.current = scaleRef.current * factor\n        const dx = (offsetX / scaleRef.current) * (factor - 1)\n        const dy = (offsetY / scaleRef.current) * (factor - 1)\n        posRef.current = {\n          x: posRef.current.x - dx,\n          y: posRef.current.y - dy,\n        }\n      }\n    }\n    const onDragStart = (e: PointerEvent) => {\n      const { x, y } = e\n      dragStart.current = { x, y }\n      drag.current = true\n      downTS.current = Date.now()\n    }\n    const onDragEnd = (_e: any) => (drag.current = false)\n    const onDragMove = (e: PointerEvent) => {\n      if (drag.current) {\n        const { x, y } = e\n        const scale = scaleRef.current\n        const pos = posRef.current\n        posRef.current = {\n          x: (x - dragStart.current.x) / scale + pos.x,\n          y: (y - dragStart.current.y) / scale + pos.y,\n        }\n        dragStart.current = { x, y }\n      }\n    }\n\n    ref.current.addEventListener('mousedown', onClick)\n    ref.current.addEventListener('mouseup', onClickEnd)\n    ref.current.addEventListener('mousemove', onMove)\n    ref.current.addEventListener('wheel', onWheel)\n    ref.current.addEventListener('mouseupoutside', onDragEnd)\n    ref.current.addEventListener('touchendoutside', onDragEnd)\n    ref.current.addEventListener('mouseup', onClick)\n    ref.current.addEventListener('mousemove', onDragMove)\n    ref.current.addEventListener('mousedown', onDragStart)\n    ref.current.addEventListener('touchstart', onDragStart)\n    ref.current.addEventListener('mouseup', onDragEnd)\n    ref.current.addEventListener('touchend', onDragEnd)\n    ref.current.addEventListener('mousemove', onDragMove)\n    ref.current.addEventListener('touchmove', onDragMove)\n    initCanvas(iterate)(ref.current)\n\n    return () => {\n      ref.current.removeEventListener('mousedown', onClick)\n      ref.current.removeEventListener('mouseup', onClickEnd)\n      ref.current.removeEventListener('mousemove', onMove)\n      ref.current.removeEventListener('wheel', onWheel)\n      ref.current.removeEventListener('mouseupoutside', onDragEnd)\n      ref.current.removeEventListener('touchendoutside', onDragEnd)\n      ref.current.removeEventListener('mouseup', onClick)\n      ref.current.removeEventListener('mousemove', onDragMove)\n      ref.current.removeEventListener('mousedown', onDragStart)\n      ref.current.removeEventListener('touchstart', onDragStart)\n      ref.current.removeEventListener('mouseup', onDragEnd)\n      ref.current.removeEventListener('touchend', onDragEnd)\n      ref.current.removeEventListener('mousemove', onDragMove)\n      ref.current.removeEventListener('touchmove', onDragMove)\n    }\n  }, [])\n  return <canvas {...{ height, width, ref }} />\n}\n\nexport default Canvas\n","/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/conf.ts",[],"/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/state.ts",["72","73","74"],"import * as conf from './conf'\ntype Coord = { x: number; y: number; dx: number; dy: number }\ntype Ball = { coord: Coord; life: number; invincible?: number }\ntype Size = { height: number; width: number }\nexport type State = {\n  pos: Array<Ball>\n  press?: { start: number; pos: { x: number; y: number } }\n  size: Size\n  player: Ball\n  endOfGame: boolean\n}\n\nconst dist2 = (o1: Coord, o2: Coord) =>\n  Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2)\n\nconst iterate =\n  (bound: Size) =>\n  (ball: Ball): Ball => {\n    const invincible = ball.invincible ? ball.invincible - 1 : ball.invincible\n    const coord = ball.coord\n    const dx =\n      (coord.x + conf.RADIUS > bound.width || coord.x < conf.RADIUS\n        ? -coord.dx\n        : coord.dx) * conf.FRICTION\n    const dy =\n      (coord.y + conf.RADIUS > bound.height || coord.y < conf.RADIUS\n        ? -coord.dy\n        : coord.dy) * conf.FRICTION\n    if (Math.abs(dx) + Math.abs(dy) < conf.MINMOVE)\n      return { ...ball, invincible, coord: { ...coord, dx: 0, dy: 0 } }\n    return {\n      ...ball,\n      invincible,\n      coord: {\n        x: coord.x + dx,\n        y: coord.y + dy,\n        dx,\n        dy,\n      },\n    }\n  }\n\nexport const clickEnd =\n  (state: State) =>\n  (_event: PointerEvent): State => {\n    if (state.press) {\n      const t = (Date.now() - state.press.start) / 20000\n      const dx = state.player.coord.x - state.press.pos.x\n      const dy = state.player.coord.y - state.press.pos.y\n      state.player.coord.dx = state.player.coord.dx + dx * t\n      state.player.coord.dy = state.player.coord.dy + dy * t\n      state.press = undefined\n    }\n    return state\n  }\n\nexport const click =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    const { offsetX: x, offsetY: y } = event\n    state.press = { start: Date.now(), pos: { x, y } }\n    return state\n  }\n\nconst collide = (o1: Coord, o2: Coord) =>\n  dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2)\n\nconst collideBoing = (p1: Coord, p2: Coord) => {\n  const nx = (p2.x - p1.x) / (2 * conf.RADIUS)\n  const ny = (p2.y - p1.y) / (2 * conf.RADIUS)\n  const gx = -ny\n  const gy = nx\n\n  const v1g = gx * p1.dx + gy * p1.dy\n  const v2n = nx * p2.dx + ny * p2.dy\n  const v2g = gx * p2.dx + gy * p2.dy\n  const v1n = nx * p1.dx + ny * p1.dy\n  p1.dx = nx * v2n + gx * v1g\n  p1.dy = ny * v2n + gy * v1g\n  p2.dx = nx * v1n + gx * v2g\n  p2.dy = ny * v1n + gy * v2g\n  p1.x += p1.dx\n  p1.y += p1.dy\n  p2.x += p2.dx\n  p2.y += p2.dy\n}\n\nexport const step = (state: State) => {\n  state.pos.map((p1, i, arr) => {\n    arr.slice(i + 1).map((p2) => {\n      if (collide(p1.coord, p2.coord)) {\n        if (!p1.invincible) {\n          p1.life--\n          p1.invincible = 20\n        }\n        if (!p2.invincible) {\n          p2.life--\n          p2.invincible = 20\n        }\n        collideBoing(p1.coord, p2.coord)\n      }\n    })\n  })\n  if (state.player.invincible) state.player.invincible--\n  state.pos.map((p1, i) => {\n    if (collide(p1.coord, state.player.coord)) {\n      collideBoing(p1.coord, state.player.coord)\n      if (!state.player.invincible) {\n        state.player.life--\n        state.player.invincible = 20\n      }\n      if (!p1.invincible) {\n        p1.life--\n        p1.invincible = 20\n      }\n    }\n  })\n  return {\n    ...state,\n    player: iterate(state.size)(state.player),\n    pos: state.pos.map(iterate(state.size)).filter((p) => p.life > 0),\n  }\n}\n\nexport const mouseMove =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    return state\n  }\n\nexport const endOfGame = (state: State): boolean =>\n  state.player.life > 0 && state.pos.length > 0\n","/home/yanis/FAC/CPAProjet/canvas/src/components/canvas/renderer.ts",[],"/home/yanis/FAC/cpaProjetFinal/CPA/src/index.tsx",[],"/home/yanis/FAC/cpaProjetFinal/CPA/src/reportWebVitals.ts",[],"/home/yanis/FAC/cpaProjetFinal/CPA/src/App.tsx",[],"/home/yanis/FAC/cpaProjetFinal/CPA/src/components/loader/index.tsx",[],"/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/index.tsx",["75","76","77"],"/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/conf.ts",[],"/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/state.ts",["78","79","80"],"/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/renderer.ts",[],{"ruleId":"81","severity":1,"message":"82","line":4,"column":18,"nodeType":"83","messageId":"84","endLine":4,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":136,"column":11,"nodeType":"83","endLine":136,"endColumn":18},{"ruleId":"85","severity":1,"message":"87","line":138,"column":6,"nodeType":"88","endLine":138,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":89,"column":30,"nodeType":"92","messageId":"93","endLine":89,"endColumn":32},{"ruleId":"90","severity":1,"message":"91","line":90,"column":31,"nodeType":"92","messageId":"93","endLine":90,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":105,"column":25,"nodeType":"92","messageId":"93","endLine":105,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":4,"column":18,"nodeType":"83","messageId":"84","endLine":4,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":136,"column":11,"nodeType":"83","endLine":136,"endColumn":18},{"ruleId":"85","severity":1,"message":"87","line":138,"column":6,"nodeType":"88","endLine":138,"endColumn":8,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"91","line":89,"column":30,"nodeType":"92","messageId":"93","endLine":89,"endColumn":32},{"ruleId":"90","severity":1,"message":"91","line":90,"column":31,"nodeType":"92","messageId":"93","endLine":90,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":105,"column":25,"nodeType":"92","messageId":"93","endLine":105,"endColumn":27},"@typescript-eslint/no-unused-vars","'RenderProps' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'iterate'. Either include it or remove the dependency array.","ArrayExpression",["95"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["96"],{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [iterate]",{"range":"100","text":"101"},{"range":"102","text":"101"},[4968,4970],"[iterate]",[4968,4970]]