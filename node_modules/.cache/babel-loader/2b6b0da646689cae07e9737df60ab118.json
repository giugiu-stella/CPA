{"ast":null,"code":"import { walkcycle, rotate, walkcycleEnnemis } from './state';\nimport imageSol from './images/sol.png';\nimport imageCoeur from './images/coeur.png';\nimport imagePerso from './images/megaMan_static1.png';\nimport imagePersoD from './images/megaMan_static1_droite.png';\nimport fond1 from './images/background_1.png';\nimport fond2 from './images/background_2.png';\nimport fond3 from './images/background_3.png';\nimport fond4 from './images/background_4.png';\nimport marche1 from './images/megaMan_run1.png';\nimport marche2 from './images/megaMan_run2.png';\nimport marche3 from './images/megaMan_run3.png';\nimport marche4 from './images/megaMan_run4.png';\nimport marche1d from './images/megaMan_run1_droite.png';\nimport marche2d from './images/megaMan_run2_droite.png';\nimport marche3d from './images/megaMan_run3_droite.png';\nimport marche4d from './images/megaMan_run4_droite.png';\nimport ennemi1 from './images/enemy_boule/enemy_boule_3.png';\nimport ennemi2 from './images/enemy_boule/enemy_boule_4.png';\nimport ennemi3 from './images/enemy_boule/enemy_boule_5.png';\nimport ennemi1D from './images/enemy_boule/enemy_boule_3_droite.png';\nimport ennemi2D from './images/enemy_boule/enemy_boule_4_droite.png';\nimport ennemi3D from './images/enemy_boule/enemy_boule_5_droite.png';\nimport balleImg from './images/oeuf.png';\nimport mort1 from './images/mort/mort_1.png';\nimport mort2 from './images/mort/mort_2.png';\nimport mort3 from './images/mort/mort_3.png';\nimport mort4 from './images/mort/mort_4.png';\nimport mort5 from './images/mort/mort_5.png';\nimport mort6 from './images/mort/mort_6.png';\nimport mort7 from './images/mort/mort_7.png';\nimport mort8 from './images/mort/mort_8.png';\nimport pf from './images/plateforme_city.png';\nimport imageMur from './images/mur.png';\nimport { ensEnnemis, ensPlat } from './index';\nvar COLORS = {\n  RED: '#ff0000',\n  GREEN: '#008800',\n  BLUE: '#0000ff'\n};\nvar oldrotate = false;\nvar frame = 0;\nexport var dimPersoX = 100;\nexport var dimPersoY = 100;\nvar stateImageSol = false;\nvar stateImageCoeur = false;\nvar stateImagePerso = false;\nvar stateFond = false;\nvar stateEnnemi = false;\nvar imageCoeurUrl = new Image();\nvar imageSolUrl = new Image();\nvar imagePersoUrl = new Image();\nvar imagePersoUrlD = new Image();\nvar imageFond1Url = new Image();\nvar imageFond2Url = new Image();\nvar imageFond3Url = new Image();\nvar imageFond4Url = new Image();\nvar imageMarche1Url = new Image();\nvar imageMarche2Url = new Image();\nvar imageMarche3Url = new Image();\nvar imageMarche4Url = new Image();\nvar imageMarche1DUrl = new Image();\nvar imageMarche2DUrl = new Image();\nvar imageMarche3DUrl = new Image();\nvar imageMarche4DUrl = new Image();\nvar imageEnnemi1Url = new Image();\nvar imageEnnemi2Url = new Image();\nvar imageEnnemi3Url = new Image();\nvar imageEnnemi1DUrl = new Image();\nvar imageEnnemi2DUrl = new Image();\nvar imageEnnemi3DUrl = new Image();\nvar imageBalleUrl = new Image();\nvar mort1URL = new Image();\nvar mort2URL = new Image();\nvar mort3URL = new Image();\nvar mort4URL = new Image();\nvar mort5URL = new Image();\nvar mort6URL = new Image();\nvar mort7URL = new Image();\nvar mort8URL = new Image();\nvar imagePF = new Image();\nvar imageMurUrl = new Image();\nimagePF.src = pf;\nimageCoeurUrl.src = imageCoeur;\nimageSolUrl.src = imageSol;\nimagePersoUrl.src = imagePerso;\nimagePersoUrlD.src = imagePersoD;\nimageFond1Url.src = fond1;\nimageFond2Url.src = fond2;\nimageFond3Url.src = fond3;\nimageFond4Url.src = fond4;\nimageMarche1Url.src = marche1;\nimageMarche2Url.src = marche2;\nimageMarche3Url.src = marche3;\nimageMarche4Url.src = marche4;\nimageMarche1DUrl.src = marche1d;\nimageMarche2DUrl.src = marche2d;\nimageMarche3DUrl.src = marche3d;\nimageMarche4DUrl.src = marche4d;\nimageEnnemi1Url.src = ennemi1;\nimageEnnemi2Url.src = ennemi2;\nimageEnnemi3Url.src = ennemi3;\nimageEnnemi1DUrl.src = ennemi1D;\nimageEnnemi2DUrl.src = ennemi2D;\nimageEnnemi3DUrl.src = ennemi3D;\nimageBalleUrl.src = balleImg;\nmort1URL.src = mort1;\nmort2URL.src = mort2;\nmort3URL.src = mort3;\nmort4URL.src = mort4;\nmort5URL.src = mort5;\nmort6URL.src = mort6;\nmort7URL.src = mort7;\nmort8URL.src = mort8;\nimageMurUrl.src = imageMur;\nimageSolUrl.onload = function () {\n  stateImageSol = true;\n};\nimageCoeurUrl.onload = function () {\n  stateImageCoeur = true;\n};\nimagePersoUrl.onload = function () {\n  stateImagePerso = true;\n};\nimageFond1Url.onload = function () {\n  stateFond = true;\n};\nimageEnnemi1Url.onload = function () {\n  stateEnnemi = true;\n};\nvar toDoubleHexa = function toDoubleHexa(n) {\n  return n < 16 ? '0' + n.toString(16) : n.toString(16);\n};\nexport var rgbaTorgb = function rgbaTorgb(rgb) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var r = 0;\n  var g = 0;\n  var b = 0;\n  if (rgb.startsWith('#')) {\n    var hexR = rgb.length === 7 ? rgb.slice(1, 3) : rgb[1];\n    var hexG = rgb.length === 7 ? rgb.slice(3, 5) : rgb[2];\n    var hexB = rgb.length === 7 ? rgb.slice(5, 7) : rgb[3];\n    r = parseInt(hexR, 16);\n    g = parseInt(hexG, 16);\n    b = parseInt(hexB, 16);\n  }\n  if (rgb.startsWith('rgb')) {\n    var val = rgb.replace(/(rgb)|\\(|\\)| /g, '');\n    var splitted = val.split(',');\n    r = parseInt(splitted[0]);\n    g = parseInt(splitted[1]);\n    b = parseInt(splitted[2]);\n  }\n  r = Math.max(Math.min(Math.floor((1 - alpha) * r + alpha * 255), 255), 0);\n  g = Math.max(Math.min(Math.floor((1 - alpha) * g + alpha * 255), 255), 0);\n  b = Math.max(Math.min(Math.floor((1 - alpha) * b + alpha * 255), 255), 0);\n  return \"#\".concat(toDoubleHexa(r)).concat(toDoubleHexa(g)).concat(toDoubleHexa(b));\n};\nvar clear = function clear(ctx) {\n  var _ctx$canvas = ctx.canvas,\n    height = _ctx$canvas.height,\n    width = _ctx$canvas.width;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n};\n\n/*\nexport type RenderProps = {\n  pos: { x: number; y: number }\n  scale: number\n}\n\nconst drawCirle = (\n  ctx: CanvasRenderingContext2D,\n  renderProps: RenderProps,\n  { x, y }: { x: number; y: number },\n  color: string\n) => {\n  ctx.beginPath()\n  ctx.fillStyle = color\n  ctx.arc(\n    (x + renderProps.pos.x) * renderProps.scale,\n    (y + renderProps.pos.y) * renderProps.scale,\n    conf.RADIUS * renderProps.scale,\n    0,\n    2 * Math.PI\n  )\n  ctx.fill()\n}*/\n\nvar canAnim = false;\nvar cptMort = 0;\nvar animMort = function animMort(ctx, state, x, y) {\n  cptMort = (cptMort + 1) % 80;\n  if (cptMort < 10) ctx.drawImage(mort1URL, x, y, 80, 80);else if (cptMort >= 10 && cptMort < 20) ctx.drawImage(mort2URL, x, y, 80, 80);else if (cptMort >= 20 && cptMort < 30) ctx.drawImage(mort3URL, x, y, 80, 80);else if (cptMort >= 30 && cptMort < 40) ctx.drawImage(mort4URL, x, y, 80, 80);else if (cptMort >= 40 && cptMort < 50) ctx.drawImage(mort5URL, x, y, 80, 80);else if (cptMort >= 50 && cptMort < 60) ctx.drawImage(mort6URL, x, y, 80, 80);else if (cptMort >= 60 && cptMort < 70) ctx.drawImage(mort7URL, x, y, 80, 80);else if (cptMort >= 70 && cptMort < 80) ctx.drawImage(mort8URL, x, y, 80, 80);else {\n    canAnim = false;\n  }\n};\nvar xMort = 0;\nvar yMort = 0;\nvar cptTmp = 0;\nvar cptTmpEnnemis = 0;\nvar displayImages = function displayImages(ctx) {\n  return function (state) {\n    //on déplace la caméra en prenant le joueur comme réferentiel\n    ctx.save();\n    ctx.translate(-(state.camera.x - ctx.canvas.width / 2), 0);\n\n    /*Il faut s'assurer que tous les éléments du fond (points de vie etc.. suivent la caméra)\n      Mais que tous les éléments fixes (plateformes/ennemis ne la suivent pas)\n    */\n    if (stateFond) {\n      if (frame < 5) ctx.drawImage(imageFond1Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);else if (frame >= 5 && frame < 10) ctx.drawImage(imageFond2Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);else if (frame >= 10 && frame < 15) ctx.drawImage(imageFond3Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);else {\n        ctx.drawImage(imageFond4Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);\n      }\n    }\n\n    //affichage du sol\n    for (var i = 0; i < 20; i++) {\n      ctx.drawImage(imageSolUrl, i * 495, 680, 500, 100);\n    }\n    for (var _i = 0; _i < ensPlat.length; _i++) {\n      ctx.drawImage(imagePF, ensPlat[_i].x, ensPlat[_i].y, ensPlat[_i].longueur, ensPlat[_i].largeur);\n      //ctx.fillStyle = 'red'\n      //ctx.fillRect(plats[i].x, plats[i].y, plats[i].longueur, plats[i].largeur)\n    }\n\n    ctx.drawImage(imageMurUrl, 0, -20, 100, 800);\n    for (var _i2 = 0; _i2 < state.joueur.HP; _i2++) {\n      ctx.drawImage(imageCoeurUrl, state.camera.x - ctx.canvas.width / 2 + _i2 * 60, 10, 50, 50);\n    }\n    /*\n    if(stateImageCoeur){\n      ctx.drawImage(imageCoeurUrl,10+state.camera.x-ctx.canvas.width/2,10,50,50);\n      ctx.drawImage(imageCoeurUrl,70+state.camera.x-ctx.canvas.width/2,10,50,50);\n      ctx.drawImage(imageCoeurUrl,130+state.camera.x-ctx.canvas.width/2,10,50,50);\n    }*/\n\n    if (stateEnnemi) {\n      if (walkcycleEnnemis == true) {\n        cptTmpEnnemis = (cptTmpEnnemis + 1) % 60;\n        console.log(cptTmpEnnemis);\n        for (var _i3 = 0; _i3 < ensEnnemis.length; _i3++) {\n          if (ensEnnemis[_i3].rotate == true) {\n            if (cptTmpEnnemis < 15) {\n              ctx.drawImage(imageEnnemi1DUrl, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            } else if (cptTmpEnnemis >= 15 && cptTmpEnnemis < 30) {\n              ctx.drawImage(imageEnnemi2DUrl, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            } else if (cptTmpEnnemis >= 30 && cptTmpEnnemis < 45) {\n              ctx.drawImage(imageEnnemi1DUrl, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            } else {\n              ctx.drawImage(imageEnnemi3DUrl, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            }\n          } else {\n            if (cptTmpEnnemis < 15) {\n              ctx.drawImage(imageEnnemi1Url, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            } else if (cptTmpEnnemis >= 15 && cptTmpEnnemis < 30) {\n              ctx.drawImage(imageEnnemi2Url, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            } else if (cptTmpEnnemis >= 30 && cptTmpEnnemis < 45) {\n              ctx.drawImage(imageEnnemi1Url, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            } else {\n              ctx.drawImage(imageEnnemi3Url, ensEnnemis[_i3].x, ensEnnemis[_i3].y, 80, 80);\n            }\n          }\n        }\n      }\n    }\n\n    //animation mort ennemis\n\n    for (var _i4 = 0; _i4 < state.ennemis.length; _i4++) {\n      if (state.ennemis[_i4].HP <= 0) {\n        xMort = state.ennemis[_i4].x;\n        yMort = state.ennemis[_i4].y;\n        state.ennemis.splice(_i4, 1);\n        canAnim = true;\n      }\n      if (canAnim) {\n        animMort(ctx, state, xMort, yMort);\n      }\n    }\n\n    /*\n    else{\n      if(rotateEnnemis==true){\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n      else{\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n    }*/\n\n    for (var _i5 = 0; _i5 < state.balle.length; _i5++) {\n      /*for(let j=0; j<state.ennemis.length; j++){\n        if(state.balle[i].x!=state.ennemis[j].x && state.balle[i].y!=state.ennemis[j].y){\n          ctx.drawImage(imageBalleUrl,state.balle[i].x,state.balle[i].y,25,25)\n        }\n      }*/\n      ctx.drawImage(imageBalleUrl, state.balle[_i5].x, state.balle[_i5].y, 25, 25);\n    }\n    if (stateImagePerso) {\n      if (walkcycle == false) {\n        cptTmp = 0;\n        if (rotate == true) {\n          ctx.drawImage(imagePersoUrlD, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);\n        } else {\n          ctx.drawImage(imagePersoUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);\n        }\n      } else {\n        if (rotate == true) {\n          cptTmp = (cptTmp + 1) % 60;\n          if (cptTmp < 15) ctx.drawImage(imageMarche1DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else if (cptTmp >= 15 && cptTmp < 30) ctx.drawImage(imageMarche2DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);else if (cptTmp >= 30 && cptTmp < 45) ctx.drawImage(imageMarche3DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else {\n            ctx.drawImage(imageMarche4DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);\n          }\n        } else {\n          cptTmp = (cptTmp + 1) % 60;\n          if (cptTmp < 15) ctx.drawImage(imageMarche1Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else if (cptTmp >= 15 && cptTmp < 30) ctx.drawImage(imageMarche2Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);else if (cptTmp >= 30 && cptTmp < 45) ctx.drawImage(imageMarche3Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else {\n            ctx.drawImage(imageMarche4Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);\n          }\n        }\n      }\n    }\n    ctx.restore();\n  };\n};\nvar computeColor = function computeColor(life, maxLife, baseColor) {\n  return rgbaTorgb(baseColor, (maxLife - life) * (1 / maxLife));\n};\nexport var render = function render(ctx, plats) {\n  return function (state) {\n    clear(ctx);\n    frame++;\n    frame = frame % 20;\n    displayImages(ctx)(state);\n    /*state.pos.map((c) =>\n      drawCirle(\n        ctx,\n        props,\n        c.coord,\n        computeColor(c.life, conf.BALLLIFE, COLORS.GREEN)\n      )\n    )\n    drawCirle(\n      ctx,\n      props,\n      state.player.coord,\n      computeColor(state.player.life, conf.PLAYERLIFE, COLORS.BLUE)\n    )*/\n\n    //console.log(plats[0][0])\n\n    /*if (state.endOfGame) {\n      const text = 'END'\n      ctx.font = '48px'\n      ctx.strokeText(text, state.size.width / 2 - 100, state.size.height / 2)\n    }*/\n  };\n};","map":{"version":3,"names":["walkcycle","rotate","walkcycleEnnemis","imageSol","imageCoeur","imagePerso","imagePersoD","fond1","fond2","fond3","fond4","marche1","marche2","marche3","marche4","marche1d","marche2d","marche3d","marche4d","ennemi1","ennemi2","ennemi3","ennemi1D","ennemi2D","ennemi3D","balleImg","mort1","mort2","mort3","mort4","mort5","mort6","mort7","mort8","pf","imageMur","ensEnnemis","ensPlat","COLORS","RED","GREEN","BLUE","oldrotate","frame","dimPersoX","dimPersoY","stateImageSol","stateImageCoeur","stateImagePerso","stateFond","stateEnnemi","imageCoeurUrl","Image","imageSolUrl","imagePersoUrl","imagePersoUrlD","imageFond1Url","imageFond2Url","imageFond3Url","imageFond4Url","imageMarche1Url","imageMarche2Url","imageMarche3Url","imageMarche4Url","imageMarche1DUrl","imageMarche2DUrl","imageMarche3DUrl","imageMarche4DUrl","imageEnnemi1Url","imageEnnemi2Url","imageEnnemi3Url","imageEnnemi1DUrl","imageEnnemi2DUrl","imageEnnemi3DUrl","imageBalleUrl","mort1URL","mort2URL","mort3URL","mort4URL","mort5URL","mort6URL","mort7URL","mort8URL","imagePF","imageMurUrl","src","onload","toDoubleHexa","n","toString","rgbaTorgb","rgb","alpha","arguments","length","undefined","r","g","b","startsWith","hexR","slice","hexG","hexB","parseInt","val","replace","splitted","split","Math","max","min","floor","concat","clear","ctx","_ctx$canvas","canvas","height","width","fillStyle","fillRect","canAnim","cptMort","animMort","state","x","y","drawImage","xMort","yMort","cptTmp","cptTmpEnnemis","displayImages","save","translate","camera","i","longueur","largeur","joueur","HP","console","log","ennemis","splice","balle","pos","restore","computeColor","life","maxLife","baseColor","render","plats"],"sources":["/home/CPA/CPA/src/components/canvas/renderer.ts"],"sourcesContent":["import * as conf from './conf'\nimport { State } from './state'\nimport * as jeu from './game'\n\nimport {walkcycle,rotate,walkcycleEnnemis,rotateEnnemis} from './state'\n\nimport imageSol from './images/sol.png'\nimport imageCoeur from './images/coeur.png'\nimport imagePerso from './images/megaMan_static1.png'\nimport imagePersoD from './images/megaMan_static1_droite.png'\nimport fond1 from './images/background_1.png'\nimport fond2 from './images/background_2.png'\nimport fond3 from './images/background_3.png'\nimport fond4 from './images/background_4.png'\n\nimport marche1 from './images/megaMan_run1.png'\nimport marche2 from './images/megaMan_run2.png'\nimport marche3 from './images/megaMan_run3.png'\nimport marche4 from './images/megaMan_run4.png'\n\nimport marche1d from './images/megaMan_run1_droite.png'\nimport marche2d from './images/megaMan_run2_droite.png'\nimport marche3d from './images/megaMan_run3_droite.png'\nimport marche4d from './images/megaMan_run4_droite.png'\nimport ennemi1 from './images/enemy_boule/enemy_boule_3.png'\nimport ennemi2 from './images/enemy_boule/enemy_boule_4.png'\nimport ennemi3 from './images/enemy_boule/enemy_boule_5.png'\nimport ennemi1D from './images/enemy_boule/enemy_boule_3_droite.png'\nimport ennemi2D from './images/enemy_boule/enemy_boule_4_droite.png'\nimport ennemi3D from './images/enemy_boule/enemy_boule_5_droite.png'\n\nimport balleImg from './images/oeuf.png'\n\nimport mort1 from './images/mort/mort_1.png'\nimport mort2 from './images/mort/mort_2.png'\nimport mort3 from './images/mort/mort_3.png'\nimport mort4 from './images/mort/mort_4.png'\nimport mort5 from './images/mort/mort_5.png'\nimport mort6 from './images/mort/mort_6.png'\nimport mort7 from './images/mort/mort_7.png'\nimport mort8 from './images/mort/mort_8.png'\n\n\nimport pf from './images/plateforme_city.png'\nimport imageMur from './images/mur.png'\n\nimport { ensEnnemis, ensPlat } from './index'\n\nconst COLORS = {\n  RED: '#ff0000',\n  GREEN: '#008800',\n  BLUE: '#0000ff',\n}\n\nlet oldrotate = false\n\nlet frame = 0\n\nexport var dimPersoX = 100\nexport var dimPersoY = 100\n\nlet stateImageSol = false\nlet stateImageCoeur = false\nlet stateImagePerso = false\nlet stateFond = false\nlet stateEnnemi=false\n\nconst imageCoeurUrl = new Image();\nconst imageSolUrl = new Image();\nconst imagePersoUrl = new Image();\nconst imagePersoUrlD = new Image();\nconst imageFond1Url = new Image();\nconst imageFond2Url = new Image();\nconst imageFond3Url = new Image();\nconst imageFond4Url = new Image();\nconst imageMarche1Url = new Image();\nconst imageMarche2Url = new Image();\nconst imageMarche3Url = new Image();\nconst imageMarche4Url = new Image();\nconst imageMarche1DUrl = new Image();\nconst imageMarche2DUrl = new Image();\nconst imageMarche3DUrl = new Image();\nconst imageMarche4DUrl = new Image();\nconst imageEnnemi1Url = new Image();\nconst imageEnnemi2Url = new Image();\nconst imageEnnemi3Url = new Image();\nconst imageEnnemi1DUrl = new Image();\nconst imageEnnemi2DUrl = new Image();\nconst imageEnnemi3DUrl = new Image();\n\nconst imageBalleUrl = new Image();\n\nconst mort1URL = new Image();\nconst mort2URL = new Image();\nconst mort3URL = new Image();\nconst mort4URL = new Image();\nconst mort5URL = new Image();\nconst mort6URL = new Image();\nconst mort7URL = new Image();\nconst mort8URL = new Image();\n\n\nconst imagePF = new Image();\nconst imageMurUrl = new Image();\n\nimagePF.src = pf;\nimageCoeurUrl.src = imageCoeur;\nimageSolUrl.src = imageSol;\nimagePersoUrl.src = imagePerso;\nimagePersoUrlD.src = imagePersoD;\nimageFond1Url.src = fond1;\nimageFond2Url.src = fond2;\nimageFond3Url.src = fond3;\nimageFond4Url.src = fond4;\nimageMarche1Url.src = marche1;\nimageMarche2Url.src = marche2;\nimageMarche3Url.src = marche3;\nimageMarche4Url.src = marche4;\nimageMarche1DUrl.src = marche1d;\nimageMarche2DUrl.src = marche2d;\nimageMarche3DUrl.src = marche3d;\nimageMarche4DUrl.src = marche4d;\nimageEnnemi1Url.src = ennemi1;\nimageEnnemi2Url.src = ennemi2;\nimageEnnemi3Url.src = ennemi3;\nimageEnnemi1DUrl.src = ennemi1D;\nimageEnnemi2DUrl.src = ennemi2D;\nimageEnnemi3DUrl.src = ennemi3D;\n\nimageBalleUrl.src = balleImg;\n\nmort1URL.src = mort1;\nmort2URL.src = mort2;\nmort3URL.src = mort3;\nmort4URL.src = mort4;\nmort5URL.src = mort5;\nmort6URL.src = mort6;\nmort7URL.src = mort7;\nmort8URL.src = mort8;\n\n\nimageMurUrl.src = imageMur;\n\nimageSolUrl.onload = () => {\n  stateImageSol = true\n}\n\nimageCoeurUrl.onload = () => {\n  stateImageCoeur = true\n}\n\nimagePersoUrl.onload = () => {\n  stateImagePerso = true\n}\n\nimageFond1Url.onload = () => {\n  stateFond = true\n}\nimageEnnemi1Url.onload = () =>{\n  stateEnnemi = true\n}\n\nconst toDoubleHexa = (n: number) =>\n  n < 16 ? '0' + n.toString(16) : n.toString(16)\n\nexport const rgbaTorgb = (rgb: string, alpha = 0) => {\n  let r = 0\n  let g = 0\n  let b = 0\n  if (rgb.startsWith('#')) {\n    const hexR = rgb.length === 7 ? rgb.slice(1, 3) : rgb[1]\n    const hexG = rgb.length === 7 ? rgb.slice(3, 5) : rgb[2]\n    const hexB = rgb.length === 7 ? rgb.slice(5, 7) : rgb[3]\n    r = parseInt(hexR, 16)\n    g = parseInt(hexG, 16)\n    b = parseInt(hexB, 16)\n  }\n  if (rgb.startsWith('rgb')) {\n    const val = rgb.replace(/(rgb)|\\(|\\)| /g, '')\n    const splitted = val.split(',')\n    r = parseInt(splitted[0])\n    g = parseInt(splitted[1])\n    b = parseInt(splitted[2])\n  }\n\n  r = Math.max(Math.min(Math.floor((1 - alpha) * r + alpha * 255), 255), 0)\n  g = Math.max(Math.min(Math.floor((1 - alpha) * g + alpha * 255), 255), 0)\n  b = Math.max(Math.min(Math.floor((1 - alpha) * b + alpha * 255), 255), 0)\n  return `#${toDoubleHexa(r)}${toDoubleHexa(g)}${toDoubleHexa(b)}`\n}\n\nconst clear = (ctx: CanvasRenderingContext2D) => {\n  const { height, width } = ctx.canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, width, height)\n}\n\n\n/*\nexport type RenderProps = {\n  pos: { x: number; y: number }\n  scale: number\n}\n\nconst drawCirle = (\n  ctx: CanvasRenderingContext2D,\n  renderProps: RenderProps,\n  { x, y }: { x: number; y: number },\n  color: string\n) => {\n  ctx.beginPath()\n  ctx.fillStyle = color\n  ctx.arc(\n    (x + renderProps.pos.x) * renderProps.scale,\n    (y + renderProps.pos.y) * renderProps.scale,\n    conf.RADIUS * renderProps.scale,\n    0,\n    2 * Math.PI\n  )\n  ctx.fill()\n}*/\n\nlet canAnim = false\n\nlet cptMort = 0\n\nconst animMort = (ctx: CanvasRenderingContext2D, state: State, x:number,y:number) => {\n  cptMort = (cptMort+1)%80\n  if(cptMort<10)\n    ctx.drawImage(mort1URL,x, y,80,80)\n  else if(cptMort>=10 && cptMort<20)\n    ctx.drawImage(mort2URL,x, y,80,80)\n  else if(cptMort>=20 && cptMort<30)\n    ctx.drawImage(mort3URL,x, y,80,80)\n  else if(cptMort>=30 && cptMort<40)\n    ctx.drawImage(mort4URL,x, y,80,80)\n  else if(cptMort>=40 && cptMort<50)\n    ctx.drawImage(mort5URL,x, y,80,80)\n  else if(cptMort>=50 && cptMort<60)\n    ctx.drawImage(mort6URL,x, y,80,80)\n  else if(cptMort>=60 && cptMort<70)\n    ctx.drawImage(mort7URL,x, y,80,80)\n  else if(cptMort>=70 && cptMort<80)\n    ctx.drawImage(mort8URL,x, y,80,80)\n  else{\n    canAnim = false\n  }\n\n}\n\nlet xMort=0\nlet yMort=0\n\n\nlet cptTmp = 0\nlet cptTmpEnnemis=0\nconst displayImages = (ctx: CanvasRenderingContext2D) => (state: State) => {\n  \n  //on déplace la caméra en prenant le joueur comme réferentiel\n  ctx.save();\n  ctx.translate(-(state.camera.x-ctx.canvas.width/2),0);\n\n  /*Il faut s'assurer que tous les éléments du fond (points de vie etc.. suivent la caméra)\n    Mais que tous les éléments fixes (plateformes/ennemis ne la suivent pas)\n  */\n  if(stateFond){\n    if(frame<5)\n      ctx.drawImage(imageFond1Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    else if (frame>=5 && frame < 10)\n      ctx.drawImage(imageFond2Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    else if (frame>=10 && frame < 15)\n      ctx.drawImage(imageFond3Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    else{\n      ctx.drawImage(imageFond4Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    }\n  }\n  \n\n  //affichage du sol\n  for(let i = 0; i<20; i++){\n      ctx.drawImage(imageSolUrl,i*495, 680, 500, 100)\n  }\n\n\n\n\n  for(let i = 0; i<ensPlat.length; i++){\n      ctx.drawImage(imagePF,ensPlat[i].x, ensPlat[i].y, ensPlat[i].longueur, ensPlat[i].largeur)\n      //ctx.fillStyle = 'red'\n      //ctx.fillRect(plats[i].x, plats[i].y, plats[i].longueur, plats[i].largeur)\n  }\n\n  ctx.drawImage(imageMurUrl,0, -20, 100, 800)\n\n  for(let i=0; i<state.joueur.HP; i++){\n    ctx.drawImage(imageCoeurUrl,(state.camera.x-ctx.canvas.width/2)+i*60,10,50,50);\n  }\n  /*\n  if(stateImageCoeur){\n    ctx.drawImage(imageCoeurUrl,10+state.camera.x-ctx.canvas.width/2,10,50,50);\n    ctx.drawImage(imageCoeurUrl,70+state.camera.x-ctx.canvas.width/2,10,50,50);\n    ctx.drawImage(imageCoeurUrl,130+state.camera.x-ctx.canvas.width/2,10,50,50);\n  }*/\n\n  if(stateEnnemi){\n    if(walkcycleEnnemis==true){\n      cptTmpEnnemis= (cptTmpEnnemis+1)%60\n      console.log(cptTmpEnnemis)\n      for(let i = 0; i<ensEnnemis.length; i++){\n        if(ensEnnemis[i].rotate == true){\n          if(cptTmpEnnemis<15){\n            ctx.drawImage(imageEnnemi1DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=15 && cptTmpEnnemis < 30){\n            ctx.drawImage(imageEnnemi2DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=30 && cptTmpEnnemis < 45){\n            ctx.drawImage(imageEnnemi1DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else{\n            ctx.drawImage(imageEnnemi3DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n        else{\n          if(cptTmpEnnemis<15){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=15 && cptTmpEnnemis < 30){\n            ctx.drawImage(imageEnnemi2Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=30 && cptTmpEnnemis < 45){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else{\n            ctx.drawImage(imageEnnemi3Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }  \n    }\n      \n  }\n\n//animation mort ennemis\n\nfor(let i=0; i<state.ennemis.length; i++){\n \n  if(state.ennemis[i].HP <=0){\n    xMort = state.ennemis[i].x\n    yMort = state.ennemis[i].y\n    state.ennemis.splice(i,1)\n    canAnim = true\n    \n  }\n  if(canAnim){\n    animMort(ctx,state,xMort,yMort)\n  }\n  \n}\n\n\n    /*\n    else{\n      if(rotateEnnemis==true){\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n      else{\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n    }*/\n  \n  for(let i=0; i<state.balle.length; i++){\n    /*for(let j=0; j<state.ennemis.length; j++){\n      if(state.balle[i].x!=state.ennemis[j].x && state.balle[i].y!=state.ennemis[j].y){\n        ctx.drawImage(imageBalleUrl,state.balle[i].x,state.balle[i].y,25,25)\n      }\n    }*/\n    ctx.drawImage(imageBalleUrl,state.balle[i].x,state.balle[i].y,25,25)\n  }\n\n  if(stateImagePerso){\n\n    if(walkcycle==false){\n      cptTmp = 0\n      if(rotate == true){\n        ctx.drawImage(imagePersoUrlD,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY);\n      }\n      else{\n          ctx.drawImage(imagePersoUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY);\n        }\n    }\n    else{\n      if(rotate==true){\n        cptTmp= (cptTmp+1)%60\n        if(cptTmp<15)\n          ctx.drawImage(imageMarche1DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else if (cptTmp>=15 && cptTmp < 30)\n          ctx.drawImage(imageMarche2DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        else if (cptTmp>=30 && cptTmp < 45)\n          ctx.drawImage(imageMarche3DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else{\n          ctx.drawImage(imageMarche4DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        }\n      }\n      else{\n        cptTmp= (cptTmp+1)%60\n        if(cptTmp<15)\n          ctx.drawImage(imageMarche1Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else if (cptTmp>=15 && cptTmp < 30)\n          ctx.drawImage(imageMarche2Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        else if (cptTmp>=30 && cptTmp < 45)\n          ctx.drawImage(imageMarche3Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else{\n          ctx.drawImage(imageMarche4Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        }\n      }\n    }\n  }\n\n\n  \n  ctx.restore();\n}\n\nconst computeColor = (life: number, maxLife: number, baseColor: string) =>\n  rgbaTorgb(baseColor, (maxLife - life) * (1 / maxLife))\n\nexport const render =\n  (ctx: CanvasRenderingContext2D/*, props: RenderProps*/, plats: Array<jeu.Plateforme>) => (state: State) => {\n    clear(ctx)\n    frame ++\n    frame = frame%20\n\n    displayImages(ctx)(state)\n    /*state.pos.map((c) =>\n      drawCirle(\n        ctx,\n        props,\n        c.coord,\n        computeColor(c.life, conf.BALLLIFE, COLORS.GREEN)\n      )\n    )\n    drawCirle(\n      ctx,\n      props,\n      state.player.coord,\n      computeColor(state.player.life, conf.PLAYERLIFE, COLORS.BLUE)\n    )*/\n\n    \n    //console.log(plats[0][0])\n    \n    /*if (state.endOfGame) {\n      const text = 'END'\n      ctx.font = '48px'\n      ctx.strokeText(text, state.size.width / 2 - 100, state.size.height / 2)\n    }*/\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}