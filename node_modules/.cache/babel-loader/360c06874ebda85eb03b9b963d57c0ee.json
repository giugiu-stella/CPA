{"ast":null,"code":"import { walkcycle, rotate, walkcycleEnnemis } from './state';\nimport imageSol from './images/sol.png';\nimport imageCoeur from './images/coeur.png';\nimport imagePerso from './images/megaMan_static1.png';\nimport imagePersoD from './images/megaMan_static1_droite.png';\nimport fond1 from './images/background_1.png';\nimport fond2 from './images/background_2.png';\nimport fond3 from './images/background_3.png';\nimport fond4 from './images/background_4.png';\nimport marche1 from './images/megaMan_run1.png';\nimport marche2 from './images/megaMan_run2.png';\nimport marche3 from './images/megaMan_run3.png';\nimport marche4 from './images/megaMan_run4.png';\nimport marche1d from './images/megaMan_run1_droite.png';\nimport marche2d from './images/megaMan_run2_droite.png';\nimport marche3d from './images/megaMan_run3_droite.png';\nimport marche4d from './images/megaMan_run4_droite.png';\nimport ennemi1 from './images/enemy_boule/enemy_boule_3.png';\nimport ennemi2 from './images/enemy_boule/enemy_boule_4.png';\nimport ennemi3 from './images/enemy_boule/enemy_boule_5.png';\nimport ennemi1D from './images/enemy_boule/enemy_boule_3_droite.png';\nimport ennemi2D from './images/enemy_boule/enemy_boule_4_droite.png';\nimport ennemi3D from './images/enemy_boule/enemy_boule_5_droite.png';\nimport pf from './images/plateforme_city.png';\nimport imageMur from './images/mur.png';\nimport { ensEnnemis, ensPlat } from './index';\nvar COLORS = {\n  RED: '#ff0000',\n  GREEN: '#008800',\n  BLUE: '#0000ff'\n};\nvar oldrotate = false;\nvar frame = 0;\nexport var dimPersoX = 120;\nexport var dimPersoY = 120;\nvar stateImageSol = false;\nvar stateImageCoeur = false;\nvar stateImagePerso = false;\nvar stateFond = false;\nvar stateEnnemi = false;\nvar imageCoeurUrl = new Image();\nvar imageSolUrl = new Image();\nvar imagePersoUrl = new Image();\nvar imagePersoUrlD = new Image();\nvar imageFond1Url = new Image();\nvar imageFond2Url = new Image();\nvar imageFond3Url = new Image();\nvar imageFond4Url = new Image();\nvar imageMarche1Url = new Image();\nvar imageMarche2Url = new Image();\nvar imageMarche3Url = new Image();\nvar imageMarche4Url = new Image();\nvar imageMarche1DUrl = new Image();\nvar imageMarche2DUrl = new Image();\nvar imageMarche3DUrl = new Image();\nvar imageMarche4DUrl = new Image();\nvar imageEnnemi1Url = new Image();\nvar imageEnnemi2Url = new Image();\nvar imageEnnemi3Url = new Image();\nvar imageEnnemi1DUrl = new Image();\nvar imageEnnemi2DUrl = new Image();\nvar imageEnnemi3DUrl = new Image();\nvar imagePF = new Image();\nvar imageMurUrl = new Image();\nimagePF.src = pf;\nimageCoeurUrl.src = imageCoeur;\nimageSolUrl.src = imageSol;\nimagePersoUrl.src = imagePerso;\nimagePersoUrlD.src = imagePersoD;\nimageFond1Url.src = fond1;\nimageFond2Url.src = fond2;\nimageFond3Url.src = fond3;\nimageFond4Url.src = fond4;\nimageMarche1Url.src = marche1;\nimageMarche2Url.src = marche2;\nimageMarche3Url.src = marche3;\nimageMarche4Url.src = marche4;\nimageMarche1DUrl.src = marche1d;\nimageMarche2DUrl.src = marche2d;\nimageMarche3DUrl.src = marche3d;\nimageMarche4DUrl.src = marche4d;\nimageEnnemi1Url.src = ennemi1;\nimageEnnemi2Url.src = ennemi2;\nimageEnnemi3Url.src = ennemi3;\nimageEnnemi1DUrl.src = ennemi1D;\nimageEnnemi2DUrl.src = ennemi2D;\nimageEnnemi3DUrl.src = ennemi3D;\nimageMurUrl.src = imageMur;\nimageSolUrl.onload = function () {\n  stateImageSol = true;\n};\nimageCoeurUrl.onload = function () {\n  stateImageCoeur = true;\n};\nimagePersoUrl.onload = function () {\n  stateImagePerso = true;\n};\nimageFond1Url.onload = function () {\n  stateFond = true;\n};\nimageEnnemi1Url.onload = function () {\n  stateEnnemi = true;\n};\nvar toDoubleHexa = function toDoubleHexa(n) {\n  return n < 16 ? '0' + n.toString(16) : n.toString(16);\n};\nexport var rgbaTorgb = function rgbaTorgb(rgb) {\n  var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var r = 0;\n  var g = 0;\n  var b = 0;\n  if (rgb.startsWith('#')) {\n    var hexR = rgb.length === 7 ? rgb.slice(1, 3) : rgb[1];\n    var hexG = rgb.length === 7 ? rgb.slice(3, 5) : rgb[2];\n    var hexB = rgb.length === 7 ? rgb.slice(5, 7) : rgb[3];\n    r = parseInt(hexR, 16);\n    g = parseInt(hexG, 16);\n    b = parseInt(hexB, 16);\n  }\n  if (rgb.startsWith('rgb')) {\n    var val = rgb.replace(/(rgb)|\\(|\\)| /g, '');\n    var splitted = val.split(',');\n    r = parseInt(splitted[0]);\n    g = parseInt(splitted[1]);\n    b = parseInt(splitted[2]);\n  }\n  r = Math.max(Math.min(Math.floor((1 - alpha) * r + alpha * 255), 255), 0);\n  g = Math.max(Math.min(Math.floor((1 - alpha) * g + alpha * 255), 255), 0);\n  b = Math.max(Math.min(Math.floor((1 - alpha) * b + alpha * 255), 255), 0);\n  return \"#\".concat(toDoubleHexa(r)).concat(toDoubleHexa(g)).concat(toDoubleHexa(b));\n};\nvar clear = function clear(ctx) {\n  var _ctx$canvas = ctx.canvas,\n    height = _ctx$canvas.height,\n    width = _ctx$canvas.width;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n};\n\n/*\nexport type RenderProps = {\n  pos: { x: number; y: number }\n  scale: number\n}\n\nconst drawCirle = (\n  ctx: CanvasRenderingContext2D,\n  renderProps: RenderProps,\n  { x, y }: { x: number; y: number },\n  color: string\n) => {\n  ctx.beginPath()\n  ctx.fillStyle = color\n  ctx.arc(\n    (x + renderProps.pos.x) * renderProps.scale,\n    (y + renderProps.pos.y) * renderProps.scale,\n    conf.RADIUS * renderProps.scale,\n    0,\n    2 * Math.PI\n  )\n  ctx.fill()\n}*/\n\nvar cptTmp = 0;\nvar cptTmpEnnemis = 0;\nvar diplayImages = function diplayImages(ctx) {\n  return function (state) {\n    //on déplace la caméra en prenant le joueur comme réferentiel\n    ctx.save();\n    ctx.translate(-(state.camera.x - ctx.canvas.width / 2), 0);\n\n    /*Il faut s'assurer que tous les éléments du fond (points de vie etc.. suivent la caméra)\n      Mais que tous les éléments fixes (plateformes/ennemis ne la suivent pas)\n    */\n    if (stateFond) {\n      if (frame < 5) ctx.drawImage(imageFond1Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);else if (frame >= 5 && frame < 10) ctx.drawImage(imageFond2Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);else if (frame >= 10 && frame < 15) ctx.drawImage(imageFond3Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);else {\n        ctx.drawImage(imageFond4Url, state.camera.x - ctx.canvas.width / 2, -200, 1400, 1000);\n      }\n    }\n    /*if(stateImageSol){\n      ctx.drawImage(imageSolUrl,0,680,500,100);\n      ctx.drawImage(imageSolUrl,495,680,500,100);\n      ctx.drawImage(imageSolUrl,990,680,500,100);\n    }*/\n\n    //affichage du sol\n    for (var i = 0; i < 20; i++) {\n      ctx.drawImage(imageSolUrl, i * 495, 680, 500, 100);\n    }\n    for (var _i = 0; _i < ensPlat.length; _i++) {\n      ctx.drawImage(imagePF, ensPlat[_i].x, ensPlat[_i].y, ensPlat[_i].longueur, ensPlat[_i].largeur);\n      //ctx.fillStyle = 'red'\n      //ctx.fillRect(plats[i].x, plats[i].y, plats[i].longueur, plats[i].largeur)\n    }\n\n    ctx.drawImage(imageMurUrl, 0, -20, 100, 800);\n\n    /*for(let i=0; i<state.joueur.HP; i++){\n      ctx.drawImage(imageCoeurUrl,10+state.camera.x-ctx.canvas.width/2,10,50,50);\n    }*/\n    if (stateImageCoeur) {\n      ctx.drawImage(imageCoeurUrl, 0 + state.camera.x - ctx.canvas.width / 2, 10, 50, 50);\n      ctx.drawImage(imageCoeurUrl, 70 + state.camera.x - ctx.canvas.width / 2, 10, 50, 50);\n      ctx.drawImage(imageCoeurUrl, 130 + state.camera.x - ctx.canvas.width / 2, 10, 50, 50);\n    }\n    if (stateEnnemi) {\n      if (walkcycleEnnemis == true) {\n        cptTmpEnnemis = (cptTmpEnnemis + 1) % 60;\n        console.log(cptTmpEnnemis);\n        for (var _i2 = 0; _i2 < ensEnnemis.length; _i2++) {\n          if (ensEnnemis[_i2].rotate == true) {\n            if (cptTmpEnnemis < 15) {\n              ctx.drawImage(imageEnnemi1DUrl, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            } else if (cptTmpEnnemis >= 15 && cptTmpEnnemis < 30) {\n              ctx.drawImage(imageEnnemi2DUrl, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            } else if (cptTmpEnnemis >= 30 && cptTmpEnnemis < 45) {\n              ctx.drawImage(imageEnnemi1DUrl, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            } else {\n              ctx.drawImage(imageEnnemi3DUrl, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            }\n          } else {\n            if (cptTmpEnnemis < 15) {\n              ctx.drawImage(imageEnnemi1Url, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            } else if (cptTmpEnnemis >= 15 && cptTmpEnnemis < 30) {\n              ctx.drawImage(imageEnnemi2Url, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            } else if (cptTmpEnnemis >= 30 && cptTmpEnnemis < 45) {\n              ctx.drawImage(imageEnnemi1Url, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            } else {\n              ctx.drawImage(imageEnnemi3Url, ensEnnemis[_i2].x, ensEnnemis[_i2].y, 80, 80);\n            }\n          }\n        }\n      }\n    }\n    /*\n    else{\n      if(rotateEnnemis==true){\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n      else{\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n    }*/\n\n    if (stateImagePerso) {\n      if (walkcycle == false) {\n        cptTmp = 0;\n        if (rotate == true) {\n          ctx.drawImage(imagePersoUrlD, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);\n        } else {\n          ctx.drawImage(imagePersoUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);\n        }\n      } else {\n        if (rotate == true) {\n          cptTmp = (cptTmp + 1) % 60;\n          if (cptTmp < 15) ctx.drawImage(imageMarche1DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else if (cptTmp >= 15 && cptTmp < 30) ctx.drawImage(imageMarche2DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);else if (cptTmp >= 30 && cptTmp < 45) ctx.drawImage(imageMarche3DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else {\n            ctx.drawImage(imageMarche4DUrl, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);\n          }\n        } else {\n          cptTmp = (cptTmp + 1) % 60;\n          if (cptTmp < 15) ctx.drawImage(imageMarche1Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else if (cptTmp >= 15 && cptTmp < 30) ctx.drawImage(imageMarche2Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);else if (cptTmp >= 30 && cptTmp < 45) ctx.drawImage(imageMarche3Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX, dimPersoY);else {\n            ctx.drawImage(imageMarche4Url, state.joueur.pos.x - dimPersoX / 2, state.joueur.pos.y - dimPersoY / 2, dimPersoX - 30, dimPersoY);\n          }\n        }\n      }\n    }\n    ctx.restore();\n  };\n};\nvar computeColor = function computeColor(life, maxLife, baseColor) {\n  return rgbaTorgb(baseColor, (maxLife - life) * (1 / maxLife));\n};\nexport var render = function render(ctx, plats) {\n  return function (state) {\n    clear(ctx);\n    frame++;\n    frame = frame % 20;\n    diplayImages(ctx)(state);\n    /*state.pos.map((c) =>\n      drawCirle(\n        ctx,\n        props,\n        c.coord,\n        computeColor(c.life, conf.BALLLIFE, COLORS.GREEN)\n      )\n    )\n    drawCirle(\n      ctx,\n      props,\n      state.player.coord,\n      computeColor(state.player.life, conf.PLAYERLIFE, COLORS.BLUE)\n    )*/\n\n    //console.log(plats[0][0])\n\n    /*if (state.endOfGame) {\n      const text = 'END'\n      ctx.font = '48px'\n      ctx.strokeText(text, state.size.width / 2 - 100, state.size.height / 2)\n    }*/\n  };\n};","map":{"version":3,"names":["walkcycle","rotate","walkcycleEnnemis","imageSol","imageCoeur","imagePerso","imagePersoD","fond1","fond2","fond3","fond4","marche1","marche2","marche3","marche4","marche1d","marche2d","marche3d","marche4d","ennemi1","ennemi2","ennemi3","ennemi1D","ennemi2D","ennemi3D","pf","imageMur","ensEnnemis","ensPlat","COLORS","RED","GREEN","BLUE","oldrotate","frame","dimPersoX","dimPersoY","stateImageSol","stateImageCoeur","stateImagePerso","stateFond","stateEnnemi","imageCoeurUrl","Image","imageSolUrl","imagePersoUrl","imagePersoUrlD","imageFond1Url","imageFond2Url","imageFond3Url","imageFond4Url","imageMarche1Url","imageMarche2Url","imageMarche3Url","imageMarche4Url","imageMarche1DUrl","imageMarche2DUrl","imageMarche3DUrl","imageMarche4DUrl","imageEnnemi1Url","imageEnnemi2Url","imageEnnemi3Url","imageEnnemi1DUrl","imageEnnemi2DUrl","imageEnnemi3DUrl","imagePF","imageMurUrl","src","onload","toDoubleHexa","n","toString","rgbaTorgb","rgb","alpha","arguments","length","undefined","r","g","b","startsWith","hexR","slice","hexG","hexB","parseInt","val","replace","splitted","split","Math","max","min","floor","concat","clear","ctx","_ctx$canvas","canvas","height","width","fillStyle","fillRect","cptTmp","cptTmpEnnemis","diplayImages","state","save","translate","camera","x","drawImage","i","y","longueur","largeur","console","log","joueur","pos","restore","computeColor","life","maxLife","baseColor","render","plats"],"sources":["/home/yanis/FAC/cpaProjetFinal/CPA/src/components/canvas/renderer.ts"],"sourcesContent":["import * as conf from './conf'\nimport { State } from './state'\nimport * as jeu from './game'\n\nimport {walkcycle,rotate,walkcycleEnnemis,rotateEnnemis} from './state'\n\nimport imageSol from './images/sol.png'\nimport imageCoeur from './images/coeur.png'\nimport imagePerso from './images/megaMan_static1.png'\nimport imagePersoD from './images/megaMan_static1_droite.png'\nimport fond1 from './images/background_1.png'\nimport fond2 from './images/background_2.png'\nimport fond3 from './images/background_3.png'\nimport fond4 from './images/background_4.png'\n\nimport marche1 from './images/megaMan_run1.png'\nimport marche2 from './images/megaMan_run2.png'\nimport marche3 from './images/megaMan_run3.png'\nimport marche4 from './images/megaMan_run4.png'\n\nimport marche1d from './images/megaMan_run1_droite.png'\nimport marche2d from './images/megaMan_run2_droite.png'\nimport marche3d from './images/megaMan_run3_droite.png'\nimport marche4d from './images/megaMan_run4_droite.png'\nimport ennemi1 from './images/enemy_boule/enemy_boule_3.png'\nimport ennemi2 from './images/enemy_boule/enemy_boule_4.png'\nimport ennemi3 from './images/enemy_boule/enemy_boule_5.png'\nimport ennemi1D from './images/enemy_boule/enemy_boule_3_droite.png'\nimport ennemi2D from './images/enemy_boule/enemy_boule_4_droite.png'\nimport ennemi3D from './images/enemy_boule/enemy_boule_5_droite.png'\n\n\nimport pf from './images/plateforme_city.png'\nimport imageMur from './images/mur.png'\n\nimport { ensEnnemis, ensPlat } from './index'\n\nconst COLORS = {\n  RED: '#ff0000',\n  GREEN: '#008800',\n  BLUE: '#0000ff',\n}\n\nlet oldrotate = false\n\nlet frame = 0\n\nexport var dimPersoX = 120\nexport var dimPersoY = 120\n\nlet stateImageSol = false\nlet stateImageCoeur = false\nlet stateImagePerso = false\nlet stateFond = false\nlet stateEnnemi=false\n\nconst imageCoeurUrl = new Image();\nconst imageSolUrl = new Image();\nconst imagePersoUrl = new Image();\nconst imagePersoUrlD = new Image();\nconst imageFond1Url = new Image();\nconst imageFond2Url = new Image();\nconst imageFond3Url = new Image();\nconst imageFond4Url = new Image();\nconst imageMarche1Url = new Image();\nconst imageMarche2Url = new Image();\nconst imageMarche3Url = new Image();\nconst imageMarche4Url = new Image();\nconst imageMarche1DUrl = new Image();\nconst imageMarche2DUrl = new Image();\nconst imageMarche3DUrl = new Image();\nconst imageMarche4DUrl = new Image();\nconst imageEnnemi1Url = new Image();\nconst imageEnnemi2Url = new Image();\nconst imageEnnemi3Url = new Image();\nconst imageEnnemi1DUrl = new Image();\nconst imageEnnemi2DUrl = new Image();\nconst imageEnnemi3DUrl = new Image();\n\n\nconst imagePF = new Image();\nconst imageMurUrl = new Image();\n\nimagePF.src = pf;\nimageCoeurUrl.src = imageCoeur;\nimageSolUrl.src = imageSol;\nimagePersoUrl.src = imagePerso;\nimagePersoUrlD.src = imagePersoD;\nimageFond1Url.src = fond1;\nimageFond2Url.src = fond2;\nimageFond3Url.src = fond3;\nimageFond4Url.src = fond4;\nimageMarche1Url.src = marche1;\nimageMarche2Url.src = marche2;\nimageMarche3Url.src = marche3;\nimageMarche4Url.src = marche4;\nimageMarche1DUrl.src = marche1d;\nimageMarche2DUrl.src = marche2d;\nimageMarche3DUrl.src = marche3d;\nimageMarche4DUrl.src = marche4d;\nimageEnnemi1Url.src = ennemi1;\nimageEnnemi2Url.src = ennemi2;\nimageEnnemi3Url.src = ennemi3;\nimageEnnemi1DUrl.src = ennemi1D;\nimageEnnemi2DUrl.src = ennemi2D;\nimageEnnemi3DUrl.src = ennemi3D;\n\nimageMurUrl.src = imageMur;\n\nimageSolUrl.onload = () => {\n  stateImageSol = true\n}\n\nimageCoeurUrl.onload = () => {\n  stateImageCoeur = true\n}\n\nimagePersoUrl.onload = () => {\n  stateImagePerso = true\n}\n\nimageFond1Url.onload = () => {\n  stateFond = true\n}\nimageEnnemi1Url.onload = () =>{\n  stateEnnemi = true\n}\n\nconst toDoubleHexa = (n: number) =>\n  n < 16 ? '0' + n.toString(16) : n.toString(16)\n\nexport const rgbaTorgb = (rgb: string, alpha = 0) => {\n  let r = 0\n  let g = 0\n  let b = 0\n  if (rgb.startsWith('#')) {\n    const hexR = rgb.length === 7 ? rgb.slice(1, 3) : rgb[1]\n    const hexG = rgb.length === 7 ? rgb.slice(3, 5) : rgb[2]\n    const hexB = rgb.length === 7 ? rgb.slice(5, 7) : rgb[3]\n    r = parseInt(hexR, 16)\n    g = parseInt(hexG, 16)\n    b = parseInt(hexB, 16)\n  }\n  if (rgb.startsWith('rgb')) {\n    const val = rgb.replace(/(rgb)|\\(|\\)| /g, '')\n    const splitted = val.split(',')\n    r = parseInt(splitted[0])\n    g = parseInt(splitted[1])\n    b = parseInt(splitted[2])\n  }\n\n  r = Math.max(Math.min(Math.floor((1 - alpha) * r + alpha * 255), 255), 0)\n  g = Math.max(Math.min(Math.floor((1 - alpha) * g + alpha * 255), 255), 0)\n  b = Math.max(Math.min(Math.floor((1 - alpha) * b + alpha * 255), 255), 0)\n  return `#${toDoubleHexa(r)}${toDoubleHexa(g)}${toDoubleHexa(b)}`\n}\n\nconst clear = (ctx: CanvasRenderingContext2D) => {\n  const { height, width } = ctx.canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, width, height)\n}\n\n\n/*\nexport type RenderProps = {\n  pos: { x: number; y: number }\n  scale: number\n}\n\nconst drawCirle = (\n  ctx: CanvasRenderingContext2D,\n  renderProps: RenderProps,\n  { x, y }: { x: number; y: number },\n  color: string\n) => {\n  ctx.beginPath()\n  ctx.fillStyle = color\n  ctx.arc(\n    (x + renderProps.pos.x) * renderProps.scale,\n    (y + renderProps.pos.y) * renderProps.scale,\n    conf.RADIUS * renderProps.scale,\n    0,\n    2 * Math.PI\n  )\n  ctx.fill()\n}*/\n\n\nlet cptTmp = 0\nlet cptTmpEnnemis=0\nconst diplayImages = (ctx: CanvasRenderingContext2D) => (state: State) => {\n  \n  //on déplace la caméra en prenant le joueur comme réferentiel\n  ctx.save();\n  ctx.translate(-(state.camera.x-ctx.canvas.width/2),0);\n\n  /*Il faut s'assurer que tous les éléments du fond (points de vie etc.. suivent la caméra)\n    Mais que tous les éléments fixes (plateformes/ennemis ne la suivent pas)\n  */\n  if(stateFond){\n    if(frame<5)\n      ctx.drawImage(imageFond1Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    else if (frame>=5 && frame < 10)\n      ctx.drawImage(imageFond2Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    else if (frame>=10 && frame < 15)\n      ctx.drawImage(imageFond3Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    else{\n      ctx.drawImage(imageFond4Url,state.camera.x-ctx.canvas.width/2,-200,1400,1000)\n    }\n  }\n  /*if(stateImageSol){\n    ctx.drawImage(imageSolUrl,0,680,500,100);\n    ctx.drawImage(imageSolUrl,495,680,500,100);\n    ctx.drawImage(imageSolUrl,990,680,500,100);\n  }*/\n\n  \n\n  //affichage du sol\n  for(let i = 0; i<20; i++){\n      ctx.drawImage(imageSolUrl,i*495, 680, 500, 100)\n  }\n\n\n\n\n  for(let i = 0; i<ensPlat.length; i++){\n      ctx.drawImage(imagePF,ensPlat[i].x, ensPlat[i].y, ensPlat[i].longueur, ensPlat[i].largeur)\n      //ctx.fillStyle = 'red'\n      //ctx.fillRect(plats[i].x, plats[i].y, plats[i].longueur, plats[i].largeur)\n  }\n\n  ctx.drawImage(imageMurUrl,0, -20, 100, 800)\n\n  /*for(let i=0; i<state.joueur.HP; i++){\n    ctx.drawImage(imageCoeurUrl,10+state.camera.x-ctx.canvas.width/2,10,50,50);\n  }*/\n  if(stateImageCoeur){\n    ctx.drawImage(imageCoeurUrl,0+state.camera.x-ctx.canvas.width/2,10,50,50);\n    ctx.drawImage(imageCoeurUrl,70+state.camera.x-ctx.canvas.width/2,10,50,50);\n    ctx.drawImage(imageCoeurUrl,130+state.camera.x-ctx.canvas.width/2,10,50,50);\n  }\n\n  if(stateEnnemi){\n    if(walkcycleEnnemis==true){\n      cptTmpEnnemis= (cptTmpEnnemis+1)%60\n      console.log(cptTmpEnnemis)\n      for(let i = 0; i<ensEnnemis.length; i++){\n        if(ensEnnemis[i].rotate == true){\n          if(cptTmpEnnemis<15){\n            ctx.drawImage(imageEnnemi1DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=15 && cptTmpEnnemis < 30){\n            ctx.drawImage(imageEnnemi2DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=30 && cptTmpEnnemis < 45){\n            ctx.drawImage(imageEnnemi1DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else{\n            ctx.drawImage(imageEnnemi3DUrl,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n        else{\n          if(cptTmpEnnemis<15){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=15 && cptTmpEnnemis < 30){\n            ctx.drawImage(imageEnnemi2Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else if(cptTmpEnnemis>=30 && cptTmpEnnemis < 45){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n          else{\n            ctx.drawImage(imageEnnemi3Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }  \n    }\n      \n  }\n    /*\n    else{\n      if(rotateEnnemis==true){\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n      else{\n        cptTmpEnnemis= (cptTmpEnnemis+1)%60\n        if(cptTmpEnnemis<15)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmpEnnemis>=15 && cptTmpEnnemis < 30)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else if (cptTmp>=30 && cptTmp < 45)\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        else{\n          for(let i = 0; i<ensEnnemis.length; i++){\n            ctx.drawImage(imageEnnemi1Url,ensEnnemis[i].x, ensEnnemis[i].y,80,80)\n          }\n        }\n      }\n    }*/\n  \n\n  if(stateImagePerso){\n\n    if(walkcycle==false){\n      cptTmp = 0\n      if(rotate == true){\n        ctx.drawImage(imagePersoUrlD,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY);\n      }\n      else{\n          ctx.drawImage(imagePersoUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY);\n        }\n    }\n    else{\n      if(rotate==true){\n        cptTmp= (cptTmp+1)%60\n        if(cptTmp<15)\n          ctx.drawImage(imageMarche1DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else if (cptTmp>=15 && cptTmp < 30)\n          ctx.drawImage(imageMarche2DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        else if (cptTmp>=30 && cptTmp < 45)\n          ctx.drawImage(imageMarche3DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else{\n          ctx.drawImage(imageMarche4DUrl,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        }\n      }\n      else{\n        cptTmp= (cptTmp+1)%60\n        if(cptTmp<15)\n          ctx.drawImage(imageMarche1Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else if (cptTmp>=15 && cptTmp < 30)\n          ctx.drawImage(imageMarche2Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        else if (cptTmp>=30 && cptTmp < 45)\n          ctx.drawImage(imageMarche3Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX,dimPersoY)\n        else{\n          ctx.drawImage(imageMarche4Url,state.joueur.pos.x-(dimPersoX/2),state.joueur.pos.y-(dimPersoY/2),dimPersoX-30,dimPersoY)\n        }\n      }\n    }\n  }\n\n\n  \n  ctx.restore();\n}\n\nconst computeColor = (life: number, maxLife: number, baseColor: string) =>\n  rgbaTorgb(baseColor, (maxLife - life) * (1 / maxLife))\n\nexport const render =\n  (ctx: CanvasRenderingContext2D/*, props: RenderProps*/, plats: Array<jeu.Plateforme>) => (state: State) => {\n    clear(ctx)\n    frame ++\n    frame = frame%20\n\n    diplayImages(ctx)(state)\n    /*state.pos.map((c) =>\n      drawCirle(\n        ctx,\n        props,\n        c.coord,\n        computeColor(c.life, conf.BALLLIFE, COLORS.GREEN)\n      )\n    )\n    drawCirle(\n      ctx,\n      props,\n      state.player.coord,\n      computeColor(state.player.life, conf.PLAYERLIFE, COLORS.BLUE)\n    )*/\n\n    \n    //console.log(plats[0][0])\n    \n    /*if (state.endOfGame) {\n      const text = 'END'\n      ctx.font = '48px'\n      ctx.strokeText(text, state.size.width / 2 - 100, state.size.height / 2)\n    }*/\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}