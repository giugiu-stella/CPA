{"ast":null,"code":"import _objectSpread from \"/home/CPA/CPA/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as jeu from './game';\nimport { dimPersoX, dimPersoY } from './renderer';\nexport var walkcycle = false;\nexport var rotate = false;\nexport var walkcycleEnnemis = false;\nexport var rotateEnnemis = false;\nvar jump = function jump(state) {\n  return state.joueur.velY = -20;\n};\nvar cpt = 0;\nvar t = 0.0;\nvar currentTime = Date.now();\nvar gravity = 1.25;\nvar auSol = false;\nvar currenty = 0;\nvar previousy = 0;\nvar invincible = false;\nvar invulnCpt = 0;\nvar reload = 0;\n\n//verifie les collisions entre le joueur et les plateformes\nexport var collide_plat = function collide_plat(state) {\n  for (var i = 0; i < state.platforms.length; i++) {\n    /*gauche*/\n    if (state.joueur.pos.x + dimPersoX / 2 > state.platforms[i].x && state.joueur.pos.y + dimPersoY / 2 >= state.platforms[i].y && state.joueur.pos.y - dimPersoY / 2 <= state.platforms[i].y + state.platforms[i].largeur && state.joueur.pos.x + dimPersoX / 2 < state.platforms[i].x + 10) {\n      state.joueur.pos.x = state.platforms[i].x - dimPersoX / 2;\n    }\n    /*droite*/\n    if (state.joueur.pos.x - dimPersoX / 2 < state.platforms[i].x + state.platforms[i].longueur && state.joueur.pos.y + dimPersoY / 2 >= state.platforms[i].y && state.joueur.pos.y - dimPersoY / 2 <= state.platforms[i].y + state.platforms[i].largeur && state.joueur.pos.x - dimPersoX / 2 > state.platforms[i].x + state.platforms[i].longueur - 10) {\n      state.joueur.pos.x = state.platforms[i].x + state.platforms[i].longueur + dimPersoX / 2;\n    }\n    /*bas*/\n    if (state.joueur.pos.y - dimPersoY / 2 < state.platforms[i].y + state.platforms[i].largeur && state.joueur.pos.x + dimPersoX / 2 > state.platforms[i].x && state.joueur.pos.x - dimPersoX / 2 < state.platforms[i].x + state.platforms[i].longueur && state.joueur.pos.y + dimPersoY / 2 > state.platforms[i].y + state.platforms[i].largeur - 35) {\n      state.joueur.pos.y = state.platforms[i].y + state.platforms[i].largeur + dimPersoY / 2;\n    }\n\n    /*haut*/\n    if (state.joueur.pos.y + dimPersoY / 2 > state.platforms[i].y && state.joueur.pos.x + dimPersoX / 2 > state.platforms[i].x && state.joueur.pos.x - dimPersoX / 2 < state.platforms[i].x + state.platforms[i].longueur && state.joueur.pos.y - dimPersoY / 2 < state.platforms[i].y + 35) {\n      state.joueur.pos.y = state.platforms[i].y - dimPersoY / 2;\n      state.joueur.velY = 0;\n    }\n  }\n};\n\n//verifie les collisions entre le joueur et les ennemis\nexport var collide_ennemi = function collide_ennemi(state) {\n  if (invincible) {\n    invulnCpt++;\n  }\n  if (invulnCpt > 100) invincible = false;\n  for (var i = 0; i < state.ennemis.length; i++) {\n    if (state.joueur.pos.x + dimPersoX / 2 > state.ennemis[i].x && state.joueur.pos.y + dimPersoY / 2 >= state.ennemis[i].y && state.joueur.pos.y - dimPersoY / 2 <= state.ennemis[i].y + 80 && state.joueur.pos.x + dimPersoX / 2 < state.ennemis[i].x + 10) {\n      if (!invincible) {\n        state.joueur.HP--;\n        if (state.joueur.HP < 0) state.joueur.HP = 0;\n        invincible = true;\n        invulnCpt = 0;\n      }\n    }\n    if (state.joueur.pos.x - dimPersoX / 2 < state.ennemis[i].x + 80 && state.joueur.pos.y + dimPersoY / 2 >= state.ennemis[i].y && state.joueur.pos.y - dimPersoY / 2 <= state.ennemis[i].y + 80 && state.joueur.pos.x - dimPersoX / 2 > state.ennemis[i].x + 80 - 10) {\n      if (!invincible) {\n        state.joueur.HP--;\n        if (state.joueur.HP < 0) state.joueur.HP = 0;\n        invincible = true;\n        invulnCpt = 0;\n      }\n    }\n    if (state.joueur.pos.y - dimPersoY / 2 < state.ennemis[i].y + 80 && state.joueur.pos.x + dimPersoX / 2 > state.ennemis[i].x + 10 && state.joueur.pos.x - dimPersoX / 2 < state.ennemis[i].x + 80 && state.joueur.pos.y + dimPersoY / 2 > state.ennemis[i].y + 80 - 40) {\n      if (!invincible) {\n        state.joueur.HP--;\n        if (state.joueur.HP < 0) state.joueur.HP = 0;\n        invincible = true;\n        invulnCpt = 0;\n      }\n    }\n    if (state.joueur.pos.y + dimPersoY / 2 > state.ennemis[i].y && state.joueur.pos.x + dimPersoX / 2 > state.ennemis[i].x + 10 && state.joueur.pos.x - dimPersoX / 2 < state.ennemis[i].x + 80 && state.joueur.pos.y - dimPersoY / 2 < state.ennemis[i].y + 40) {\n      if (!invincible) {\n        state.joueur.HP--;\n        if (state.joueur.HP < 0) state.joueur.HP = 0;\n        invincible = true;\n        invulnCpt = 0;\n      }\n    }\n  }\n};\nexport var collide_platEnnemis = function collide_platEnnemis(state) {\n  for (var i = 0; i < state.platforms.length; i++) {\n    for (var j = 0; j < state.ennemis.length; j++) {\n      /*gauche*/\n      if (state.ennemis[j].x + 80 / 2 > state.platforms[i].x && state.ennemis[j].y + 80 / 2 >= state.platforms[i].y && state.ennemis[j].y - 80 / 2 <= state.platforms[i].y + state.platforms[i].largeur && state.ennemis[j].x + 80 < state.platforms[i].x + 10) {\n        state.ennemis[j].x = state.platforms[i].x - 80 / 2;\n        state.ennemis[j].speed = -state.ennemis[j].speed;\n        state.ennemis[j].dist_parcouru = 0;\n        //rotation si collision\n        if (state.ennemis[j].rotate == true) state.ennemis[j].rotate = false;else state.ennemis[j].rotate = true;\n      }\n      /*droite*/\n      if (state.ennemis[j].x - 80 / 2 < state.platforms[i].x + state.platforms[i].longueur && state.ennemis[j].y + 80 / 2 >= state.platforms[i].y && state.ennemis[j].y - 80 / 2 <= state.platforms[i].y + state.platforms[i].largeur && state.ennemis[j].x - 80 / 2 > state.platforms[i].x + state.platforms[i].longueur - 10) {\n        state.ennemis[j].x = state.platforms[i].x + state.platforms[i].longueur + 80 / 2;\n        state.ennemis[j].speed = -state.ennemis[j].speed;\n        state.ennemis[j].dist_parcouru = 0;\n        //rotation si collision\n        if (state.ennemis[j].rotate == true) state.ennemis[j].rotate = false;else state.ennemis[j].rotate = true;\n      }\n      /*bas*/\n      /*if (state.ennemis[j].y-80/2 < (state.platforms[i].y+state.platforms[i].largeur) && state.ennemis[j].x+80/2 >state.platforms[i].x \n        && state.ennemis[j].x-80/2<(state.platforms[i].x + state.platforms[i].longueur)&& state.ennemis[j].y+80/2> (state.platforms[i].y+state.platforms[i].largeur-35)){\n          state.ennemis[j].y =state.platforms[i].y + state.platforms[i].largeur + 80/2;\n      }*/\n\n      /*haut*/\n      /*if (state.ennemis[j].y+80/2 > state.platforms[i].y && state.ennemis[j].x+80/2 > state.platforms[i].x \n        && state.ennemis[j].x-80/2 < (state.platforms[i].x + state.platforms[i].longueur) && (state.ennemis[j].y-80/2 <state.platforms[i].y +35)){\n          state.ennemis[j].y =state.platforms[i].y-80/2;\n          state.joueur.velY=0;\n      }*/\n    }\n  }\n};\n\n//Verification de collision entre les balles et les ennemis ou plateformes\nvar collide_balle = function collide_balle(state, i) {\n  for (var j = 0; j < state.ennemis.length; j++) {\n    if (state.balle[i].x + 25 / 2 > state.ennemis[j].x && state.balle[i].x + 25 / 2 < state.ennemis[j].x + 80 && state.balle[i].y + 25 / 2 > state.ennemis[j].y && state.balle[i].y + 25 / 2 < state.ennemis[j].y + 80) {\n      state.ennemis[j].HP--;\n      return true;\n    }\n  }\n  for (var _j = 0; _j < state.platforms.length; _j++) {\n    if (state.balle[i].x + 25 / 2 > state.platforms[_j].x && state.balle[i].x + 25 / 2 < state.platforms[_j].x + state.platforms[_j].longueur && state.balle[i].y + 25 / 2 > state.platforms[_j].y && state.balle[i].y + 25 / 2 < state.platforms[_j].y + state.platforms[_j].largeur) {\n      return true;\n    }\n  }\n  return false;\n};\nvar update_balles = function update_balles(state) {\n  for (var i = 0; i < state.balle.length; i++) {\n    state.balle[i].x += state.balle[i].speed * state.balle[i].rotation;\n    state.balle[i].dist_parcouru += state.balle[i].speed * state.balle[i].rotation;\n    //on retire la balle de la liste quand la distance est parcourue ou s'il y a collision\n    if (Math.abs(state.balle[i].dist_parcouru) > state.balle[i].dist_max || collide_balle(state, i)) {\n      state.balle.splice(i, 1);\n    }\n  }\n  if (reload != 0) {\n    reload = (reload + 1) % 20;\n  }\n};\nexport var step = function step(state) {\n  currenty = state.joueur.pos.y;\n  var newTime = Date.now();\n  var frameTime = newTime - currentTime;\n  currentTime = newTime;\n  update_balles(state);\n\n  //if (frameTime > 1000/60) {\n\n  //newTime = currentTime - (frameTime % (1000/60));\n\n  document.addEventListener('keydown', function (event) {\n    var name = event.key;\n    if (name === ' ' && reload == 0) {\n      reload = 1;\n      if (rotate) {\n        state.balle.push(new jeu.Balle({\n          x: state.joueur.pos.x + dimPersoX - 50,\n          y: state.joueur.pos.y,\n          speed: 14,\n          dist_parcouru: 0,\n          dist_max: 500,\n          rotation: 1\n        }));\n      } else {\n        state.balle.push(new jeu.Balle({\n          x: state.joueur.pos.x - dimPersoX + 40,\n          y: state.joueur.pos.y,\n          speed: 14,\n          dist_parcouru: 0,\n          dist_max: 500,\n          rotation: -1\n        }));\n      }\n    }\n    if (name === 'z') {\n      if (auSol) {\n        jump(state);\n        //state.joueur.velY = -7;\n      }\n      //state.joueur.pos = perso.moveUp(state.joueur,frameTime)\n    }\n    /*\n    if(name==='s'){\n      if (state.joueur.velY < state.joueur.speed) {\n        state.joueur.velY=7;\n      }\n       //state.joueur.pos=perso.moveDown(state.joueur,frameTime)\n    }\n    */\n    if (name === 'q') {\n      if (state.joueur.velX > -state.joueur.speed) {\n        state.joueur.velX = -state.joueur.speed + 3;\n        walkcycle = true;\n        if (rotate == true) rotate = false;\n      }\n      //state.joueur.pos= perso.moveLeft(state.joueur,frameTime)\n    }\n\n    if (name === 'd') {\n      if (state.joueur.velX < state.joueur.speed) {\n        state.joueur.velX = state.joueur.speed - 3;\n        walkcycle = true;\n        if (rotate == false) rotate = true;\n      }\n      // state.joueur.pos= perso.moveRight(state.joueur,frameTime)\n    }\n  }, false);\n  document.addEventListener('keyup', function (event) {\n    var name = event.key;\n\n    /*if(name==='z'){\n      if (state.joueur.velY > -state.joueur.speed) {\n        state.joueur.velY = 0;\n      }\n      //state.joueur.pos = perso.moveUp(state.joueur,frameTime)\n    }\n    if(name==='s'){\n      if (state.joueur.velY < state.joueur.speed) {\n        state.joueur.velY=0;\n      }\n       //state.joueur.pos=perso.moveDown(state.joueur,frameTime)\n    }*/\n    if (name === 'q') {\n      if (state.joueur.velX > -state.joueur.speed) {\n        state.joueur.velX = 0;\n        walkcycle = false;\n      }\n      //state.joueur.pos= perso.moveLeft(state.joueur,frameTime)\n    }\n\n    if (name === 'd') {\n      if (state.joueur.velX < state.joueur.speed) {\n        state.joueur.velX = 0;\n        walkcycle = false;\n      }\n      // state.joueur.pos= perso.moveRight(state.joueur,frameTime)\n    }\n  }, false);\n\n  //}\n\n  //state.joueur.velY *= friction;\n  state.joueur.pos.y += state.joueur.velY;\n  //state.joueur.velX *= friction;\n  state.joueur.pos.x += state.joueur.velX;\n  state.joueur.velY += gravity;\n  if (state.joueur.pos.y > 635) {\n    state.joueur.pos.y = 635;\n  }\n\n  //deplacement Ennemis\n  for (var j = 0; j < state.ennemis.length; j++) {\n    //on verifie si l'ennemi doit changer de direction car il a parcouru sa distance\n    if (Math.abs(state.ennemis[j].dist_parcouru) > state.ennemis[j].dist_max) {\n      state.ennemis[j].speed = -state.ennemis[j].speed;\n      state.ennemis[j].dist_parcouru;\n      if (state.ennemis[j].rotate == true) state.ennemis[j].rotate = false;else state.ennemis[j].rotate = true;\n    }\n    state.ennemis[j].velX = state.ennemis[j].speed;\n    walkcycleEnnemis = true;\n    if (state.ennemis[j].type != 'volant') {\n      state.ennemis[j].y += state.ennemis[j].velY;\n      state.ennemis[j].velY += gravity;\n    }\n    state.ennemis[j].x += state.ennemis[j].velX;\n    //distance parcourue\n    state.ennemis[j].dist_parcouru += state.ennemis[j].velX;\n    if (state.ennemis[j].y > 612) {\n      state.ennemis[j].y = 612;\n    }\n\n    //on verifie si l'ennemi doit changer de direction car il a recnontré une plateforme\n    collide_platEnnemis(state);\n  }\n  collide_plat(state);\n  collide_ennemi(state);\n  if (currenty == previousy) {\n    auSol = true;\n  } else {\n    auSol = false;\n  }\n  previousy = currenty;\n\n  //mouvement Camera\n  if (state.joueur.pos.x > 700 && state.joueur.pos.x < 5400) {\n    state.camera.x = state.joueur.pos.x;\n    state.camera.y = state.joueur.pos.y;\n  }\n  return _objectSpread({}, state);\n};\nexport var stepAuto = function stepAuto(state) {\n  return _objectSpread({}, state);\n};\nexport var mouseMove = function mouseMove(state) {\n  return function (event) {\n    return state;\n  };\n};\nexport var endOfGame = function endOfGame(state) {\n  return state.joueur.HP > 0 && state.joueur.pos.x <= 5900;\n};","map":{"version":3,"names":["jeu","dimPersoX","dimPersoY","walkcycle","rotate","walkcycleEnnemis","rotateEnnemis","jump","state","joueur","velY","cpt","t","currentTime","Date","now","gravity","auSol","currenty","previousy","invincible","invulnCpt","reload","collide_plat","i","platforms","length","pos","x","y","largeur","longueur","collide_ennemi","ennemis","HP","collide_platEnnemis","j","speed","dist_parcouru","collide_balle","balle","update_balles","rotation","Math","abs","dist_max","splice","step","newTime","frameTime","document","addEventListener","event","name","key","push","Balle","velX","type","camera","_objectSpread","stepAuto","mouseMove","endOfGame"],"sources":["/home/CPA/CPA/src/components/canvas/state.ts"],"sourcesContent":["import * as jeu from './game'\n\nimport { dimPersoX , dimPersoY} from './renderer'\n\ntype Player = jeu.Player\ntype Platform = jeu.Plateforme\ntype Camera = jeu.Camera\ntype Ennemi = jeu.Ennemi\ntype Balle = jeu.Balle\n\nexport type State = {\n  endOfGame: boolean\n  joueur : Player\n  platforms: Array<Platform>\n  camera: Camera\n  ennemis: Array<Ennemi>\n  balle: Array<Balle>\n}\n\nexport var walkcycle = false\n\nexport var rotate = false\n\nexport var walkcycleEnnemis = false\n\nexport var rotateEnnemis = false\n\nconst jump = (state: State) =>\n  state.joueur.velY = -20;\n\n\nlet cpt = 0\n\nlet t = 0.0;\n\nlet currentTime = Date.now()\n\nlet gravity = 1.25\n\nlet auSol = false\n\nlet currenty = 0\n\nlet previousy = 0\n\nlet invincible = false\nlet invulnCpt = 0\n\nlet reload = 0\n\n//verifie les collisions entre le joueur et les plateformes\nexport const collide_plat = (state: State) => {\n  for(let i=0; i<state.platforms.length;i++){\n\n    /*gauche*/\n    if (state.joueur.pos.x+dimPersoX/2 > state.platforms[i].x && state.joueur.pos.y+dimPersoY/2 >=state.platforms[i].y \n      && state.joueur.pos.y - dimPersoY/2 <=(state.platforms[i].y + state.platforms[i].largeur)&& state.joueur.pos.x+dimPersoX/2 <(state.platforms[i].x +10)){\n        state.joueur.pos.x =state.platforms[i].x-dimPersoX/2;\n    }\n    /*droite*/\n    if (state.joueur.pos.x-dimPersoX/2 < (state.platforms[i].x +state.platforms[i].longueur )&& state.joueur.pos.y+dimPersoY/2 >=state.platforms[i].y \n      && state.joueur.pos.y - dimPersoY/2 <=(state.platforms[i].y + state.platforms[i].largeur) && state.joueur.pos.x-dimPersoX/2 > (state.platforms[i].x +state.platforms[i].longueur -10) ){\n        state.joueur.pos.x =state.platforms[i].x +state.platforms[i].longueur+dimPersoX/2;\n    }\n    /*bas*/\n    if (state.joueur.pos.y-dimPersoY/2 < (state.platforms[i].y+state.platforms[i].largeur) && state.joueur.pos.x+dimPersoX/2 >state.platforms[i].x \n      && state.joueur.pos.x-dimPersoX/2<(state.platforms[i].x + state.platforms[i].longueur)&& state.joueur.pos.y+dimPersoY/2> (state.platforms[i].y+state.platforms[i].largeur-35)){\n        state.joueur.pos.y =state.platforms[i].y + state.platforms[i].largeur + dimPersoY/2;\n    }\n    \n    /*haut*/\n    if (state.joueur.pos.y+dimPersoY/2 > state.platforms[i].y && state.joueur.pos.x+dimPersoX/2 > state.platforms[i].x \n      && state.joueur.pos.x-dimPersoX/2 < (state.platforms[i].x + state.platforms[i].longueur) && (state.joueur.pos.y-dimPersoY/2 <state.platforms[i].y +35)){\n        state.joueur.pos.y =state.platforms[i].y-dimPersoY/2;\n        state.joueur.velY=0;\n    }\n  }\n}\n\n//verifie les collisions entre le joueur et les ennemis\nexport const collide_ennemi = (state: State) => {\n  if(invincible){\n    invulnCpt++\n  }\n  if(invulnCpt>100)\n    invincible = false\n  \n  for(let i=0; i<state.ennemis.length;i++){\n    \n    if (state.joueur.pos.x+dimPersoX/2 > state.ennemis[i].x && state.joueur.pos.y+dimPersoY/2 >=state.ennemis[i].y \n      && state.joueur.pos.y - dimPersoY/2 <=(state.ennemis[i].y + 80)&& state.joueur.pos.x+dimPersoX/2 <(state.ennemis[i].x +10)){\n        if(!invincible){\n          state.joueur.HP--;\n          if(state.joueur.HP<0)\n            state.joueur.HP=0;\n          invincible = true\n          invulnCpt=0;\n        }\n    }\n    \n    if (state.joueur.pos.x-dimPersoX/2 < (state.ennemis[i].x +80 )&& state.joueur.pos.y+dimPersoY/2 >=state.ennemis[i].y \n      && state.joueur.pos.y - dimPersoY/2 <=(state.ennemis[i].y + 80) && state.joueur.pos.x-dimPersoX/2 > (state.ennemis[i].x +80-10) ){\n        if(!invincible){\n          state.joueur.HP--;\n          if(state.joueur.HP<0)\n            state.joueur.HP=0;\n          invincible = true\n          invulnCpt=0;\n        }\n    }\n    \n    if (state.joueur.pos.y-dimPersoY/2 < (state.ennemis[i].y+80) && state.joueur.pos.x+dimPersoX/2 >state.ennemis[i].x +10\n      && state.joueur.pos.x-dimPersoX/2<(state.ennemis[i].x + 80)&& state.joueur.pos.y+dimPersoY/2> (state.ennemis[i].y+80-40)){\n        if(!invincible){\n          state.joueur.HP--;\n          if(state.joueur.HP<0)\n            state.joueur.HP=0;\n          invincible = true\n          invulnCpt=0;\n        }\n    }\n    \n    \n    if (state.joueur.pos.y+dimPersoY/2 > state.ennemis[i].y && state.joueur.pos.x+dimPersoX/2 > state.ennemis[i].x +10\n      && state.joueur.pos.x-dimPersoX/2 < (state.ennemis[i].x + 80) && (state.joueur.pos.y-dimPersoY/2 <state.ennemis[i].y +40)){\n        if(!invincible){\n          state.joueur.HP--;\n          if(state.joueur.HP<0)\n            state.joueur.HP=0;\n          invincible = true\n          invulnCpt=0;\n        }\n    }\n  }\n}\n\nexport const collide_platEnnemis = (state: State) => {\n  for(let i=0; i<state.platforms.length;i++){\n    for(let j=0; j<state.ennemis.length;j++){\n      /*gauche*/\n      if (state.ennemis[j].x+80/2 > state.platforms[i].x && state.ennemis[j].y+80/2 >=state.platforms[i].y \n        && state.ennemis[j].y - 80/2 <=(state.platforms[i].y + state.platforms[i].largeur)&& state.ennemis[j].x+80 <(state.platforms[i].x +10)){\n          state.ennemis[j].x =state.platforms[i].x-80/2;\n          state.ennemis[j].speed = -state.ennemis[j].speed;\n          state.ennemis[j].dist_parcouru = 0\n          //rotation si collision\n          if(state.ennemis[j].rotate == true)\n            state.ennemis[j].rotate = false;\n          else\n            state.ennemis[j].rotate = true\n      }\n      /*droite*/\n      if (state.ennemis[j].x-80/2 < (state.platforms[i].x +state.platforms[i].longueur )&& state.ennemis[j].y+80/2 >=state.platforms[i].y \n        && state.ennemis[j].y - 80/2 <=(state.platforms[i].y + state.platforms[i].largeur) && state.ennemis[j].x-80/2 > (state.platforms[i].x +state.platforms[i].longueur -10) ){\n          state.ennemis[j].x =state.platforms[i].x +state.platforms[i].longueur+80/2;\n          state.ennemis[j].speed = -state.ennemis[j].speed;\n          state.ennemis[j].dist_parcouru = 0\n          //rotation si collision\n          if(state.ennemis[j].rotate == true)\n            state.ennemis[j].rotate = false;\n          else\n            state.ennemis[j].rotate = true\n      }\n      /*bas*/\n      /*if (state.ennemis[j].y-80/2 < (state.platforms[i].y+state.platforms[i].largeur) && state.ennemis[j].x+80/2 >state.platforms[i].x \n        && state.ennemis[j].x-80/2<(state.platforms[i].x + state.platforms[i].longueur)&& state.ennemis[j].y+80/2> (state.platforms[i].y+state.platforms[i].largeur-35)){\n          state.ennemis[j].y =state.platforms[i].y + state.platforms[i].largeur + 80/2;\n      }*/\n      \n      /*haut*/\n      /*if (state.ennemis[j].y+80/2 > state.platforms[i].y && state.ennemis[j].x+80/2 > state.platforms[i].x \n        && state.ennemis[j].x-80/2 < (state.platforms[i].x + state.platforms[i].longueur) && (state.ennemis[j].y-80/2 <state.platforms[i].y +35)){\n          state.ennemis[j].y =state.platforms[i].y-80/2;\n          state.joueur.velY=0;\n      }*/\n    }\n  }\n}\n\n//Verification de collision entre les balles et les ennemis ou plateformes\nconst collide_balle = (state: State, i: number) =>{\n  for(let j=0; j<state.ennemis.length; j++){\n    if(state.balle[i].x+25/2>state.ennemis[j].x && state.balle[i].x+25/2<state.ennemis[j].x+80 && state.balle[i].y+25/2>state.ennemis[j].y && state.balle[i].y+25/2<state.ennemis[j].y+80){\n      state.ennemis[j].HP--\n      return true\n    }\n  }\n  for(let j=0; j<state.platforms.length; j++){\n    if(state.balle[i].x+25/2>state.platforms[j].x && state.balle[i].x+25/2<state.platforms[j].x+state.platforms[j].longueur && state.balle[i].y+25/2>state.platforms[j].y && state.balle[i].y+25/2<state.platforms[j].y+state.platforms[j].largeur){\n      return true\n    }\n  }\n  return false\n  \n}\n\nconst update_balles = (state: State) => {\n  for(let i=0; i<state.balle.length; i++){\n    state.balle[i].x+=state.balle[i].speed*state.balle[i].rotation\n    state.balle[i].dist_parcouru+=state.balle[i].speed*state.balle[i].rotation\n    //on retire la balle de la liste quand la distance est parcourue ou s'il y a collision\n    if((Math.abs(state.balle[i].dist_parcouru)>state.balle[i].dist_max) || collide_balle(state,i)){\n      state.balle.splice(i,1)\n    }\n  }\n  if (reload !=0){\n    reload = (reload+1)%20\n  }\n\n}\n\n\n\nexport const step = (state: State) => {\n\n  currenty = state.joueur.pos.y\n\n  let newTime = Date.now();\n  let frameTime = newTime - currentTime;\n  currentTime = newTime;\n\n  update_balles(state);\n   \n\n\n\n  \n\n  //if (frameTime > 1000/60) {\n\n    //newTime = currentTime - (frameTime % (1000/60));\n\n    document.addEventListener('keydown', (event) => {\n      var name = event.key;\n      if(name===' ' && reload == 0){\n        reload = 1;\n        if(rotate){\n          state.balle.push(new jeu.Balle({x : state.joueur.pos.x+dimPersoX-50, y:state.joueur.pos.y, speed:14, dist_parcouru:0,dist_max:500,rotation:1}))\n        }\n        else{\n          state.balle.push(new jeu.Balle({x : state.joueur.pos.x-dimPersoX+40, y:state.joueur.pos.y, speed:14, dist_parcouru:0,dist_max:500,rotation:-1}))\n        }\n      \n      }\n  \n      if(name==='z'){\n        if (auSol) {\n          jump(state);\n          //state.joueur.velY = -7;\n        }\n        //state.joueur.pos = perso.moveUp(state.joueur,frameTime)\n      }\n      /*\n      if(name==='s'){\n        if (state.joueur.velY < state.joueur.speed) {\n          state.joueur.velY=7;\n        }\n         //state.joueur.pos=perso.moveDown(state.joueur,frameTime)\n      }\n      */\n      if(name==='q'){\n        if (state.joueur.velX > -state.joueur.speed) {\n          state.joueur.velX=-state.joueur.speed+3;\n          walkcycle = true;\n          if(rotate == true)\n            rotate = false\n        }\n         //state.joueur.pos= perso.moveLeft(state.joueur,frameTime)\n      }\n      if(name==='d'){\n        if (state.joueur.velX < state.joueur.speed) {\n          state.joueur.velX=state.joueur.speed-3;\n          walkcycle = true;\n          if(rotate == false)\n            rotate = true\n        }\n        // state.joueur.pos= perso.moveRight(state.joueur,frameTime)\n      }\n  \n    }, false);\n\n    document.addEventListener('keyup', (event) => {\n      var name = event.key;\n  \n      /*if(name==='z'){\n        if (state.joueur.velY > -state.joueur.speed) {\n          state.joueur.velY = 0;\n        }\n        //state.joueur.pos = perso.moveUp(state.joueur,frameTime)\n      }\n      if(name==='s'){\n        if (state.joueur.velY < state.joueur.speed) {\n          state.joueur.velY=0;\n        }\n         //state.joueur.pos=perso.moveDown(state.joueur,frameTime)\n      }*/\n      if(name==='q'){\n        if (state.joueur.velX > -state.joueur.speed) {\n          state.joueur.velX=0;\n          walkcycle = false\n        }\n         //state.joueur.pos= perso.moveLeft(state.joueur,frameTime)\n      }\n      if(name==='d'){\n        if (state.joueur.velX < state.joueur.speed) {\n          state.joueur.velX=0;\n          walkcycle = false\n        }\n        // state.joueur.pos= perso.moveRight(state.joueur,frameTime)\n      }\n  \n    }, false);\n\n\n  //}\n\n  //state.joueur.velY *= friction;\n  state.joueur.pos.y += state.joueur.velY;\n  //state.joueur.velX *= friction;\n  state.joueur.pos.x += state.joueur.velX;\n\n\n  \n  \n  state.joueur.velY += gravity;\n\n  if(state.joueur.pos.y > 635){\n    state.joueur.pos.y = 635\n  }\n\n  //deplacement Ennemis\n  for(let j=0; j<state.ennemis.length;j++){\n    \n    //on verifie si l'ennemi doit changer de direction car il a parcouru sa distance\n    if(Math.abs(state.ennemis[j].dist_parcouru)>state.ennemis[j].dist_max){\n      state.ennemis[j].speed = -state.ennemis[j].speed;\n      state.ennemis[j].dist_parcouru\n      if(state.ennemis[j].rotate == true)\n        state.ennemis[j].rotate = false;\n      else\n        state.ennemis[j].rotate = true\n    }\n\n\n    state.ennemis[j].velX=state.ennemis[j].speed;\n    walkcycleEnnemis = true;\n    \n\n    if(state.ennemis[j].type != 'volant'){\n      state.ennemis[j].y += state.ennemis[j].velY;\n      state.ennemis[j].velY += gravity;\n    }\n\n    state.ennemis[j].x += state.ennemis[j].velX;\n    //distance parcourue\n    state.ennemis[j].dist_parcouru+=state.ennemis[j].velX;\n      \n\n    if(state.ennemis[j].y > 612){\n      state.ennemis[j].y = 612\n    }\n\n\n\n    //on verifie si l'ennemi doit changer de direction car il a recnontré une plateforme\n    collide_platEnnemis(state);\n  }\n\n\n  collide_plat(state);\n  collide_ennemi(state);\n  if(currenty == previousy){\n    auSol = true\n  }\n  else{\n    auSol = false\n  }\n\n  previousy = currenty\n\n  //mouvement Camera\n  if(state.joueur.pos.x>700 && state.joueur.pos.x<5400){\n    state.camera.x = state.joueur.pos.x\n    state.camera.y = state.joueur.pos.y\n  }\n  \n\n  return {\n    ...state,\n    //player: iterate(state.joueur)(state.size)(state.player),\n    //pos: state.pos.map(iterate(state.joueur)(state.size)).filter((p) => p.life > 0),\n  }\n}\n\nexport const stepAuto = (state: State) => {\n\n  return {\n    ...state,\n    //player: iterate(state.joueur)(state.size)(state.player),\n    //pos: state.pos.map(iterate(state.joueur)(state.size)).filter((p) => p.life > 0),\n  }\n}\nexport const mouseMove =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    return state\n  }\n\nexport const endOfGame = (state: State): boolean =>\n  (state.joueur.HP > 0 && state.joueur.pos.x <= 5900)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}