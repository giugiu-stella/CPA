{"ast":null,"code":"export { moveUp, moveDown, moveLeft, moveRight };\nconst moveUp = (player, delta) => {\n  return {\n    x: player.pos.x,\n    y: player.pos.y - player.speed * delta\n  };\n};\nconst moveDown = (player, delta) => {\n  return {\n    x: player.pos.x,\n    y: player.pos.y + player.speed * delta\n  };\n};\nconst moveLeft = (player, delta) => {\n  return {\n    x: player.pos.x - player.speed * delta,\n    y: player.pos.y\n  };\n};\nconst moveRight = (player, delta) => {\n  return {\n    x: player.pos.x + player.speed * delta,\n    y: player.pos.y\n  };\n};\n\n/*export const step = (player: Player,k:number) =>{\n    var key_pressed=String.fromCharCode(k);\n    if(key_pressed=='Z'){\n       return player.pos= moveUp(player)\n    }\n    if(key_pressed=='S'){\n        return player.pos=moveDown(player)\n    }\n    if(key_pressed=='Q'){\n        return player.pos= moveLeft(player)\n    }\n    if(key_pressed=='D'){\n        return player.pos= moveRight(player)\n    }\n    else{\n        return player.pos\n    }\n  }\n\nexport const iterate = (event: KeyboardEvent)=>(player: Player) => {\n    const coord = player.pos\n    \n    player.pos=step(player,event.keyCode)\n   \n    return{\n        player\n    }\n    \n    \n  }*/","map":{"version":3,"names":["moveUp","moveDown","moveLeft","moveRight","player","delta","x","pos","y","speed"],"sources":["/users/nfs/Vrac/TME7CPAYANIS/proj/CPA/src/components/canvas/game.ts"],"sourcesContent":["export { type Player, type Coord, moveUp, moveDown, moveLeft, moveRight };\ntype Coord = { x: number; y: number}\ntype Player ={\n    pos:Coord,\n    HP:number,\n    speed:number,\n    velX: number,\n    velY: number,\n}\nconst moveUp=(player:Player,delta:number)=>{\n    return {x:player.pos.x, y:player.pos.y-(player.speed * delta)}\n}\nconst moveDown=(player:Player,delta:number)=>{\n    return {x:player.pos.x, y:player.pos.y+(player.speed * delta)}\n}\nconst moveLeft=(player:Player,delta:number)=>{\n    return {x:player.pos.x-(player.speed * delta),y: player.pos.y}\n}\nconst moveRight=(player:Player,delta:number)=>{\n    return {x:player.pos.x+(player.speed * delta), y:player.pos.y}\n}\n\n/*export const step = (player: Player,k:number) =>{\n    var key_pressed=String.fromCharCode(k);\n    if(key_pressed=='Z'){\n       return player.pos= moveUp(player)\n    }\n    if(key_pressed=='S'){\n        return player.pos=moveDown(player)\n    }\n    if(key_pressed=='Q'){\n        return player.pos= moveLeft(player)\n    }\n    if(key_pressed=='D'){\n        return player.pos= moveRight(player)\n    }\n    else{\n        return player.pos\n    }\n  }\n\nexport const iterate = (event: KeyboardEvent)=>(player: Player) => {\n    const coord = player.pos\n    \n    player.pos=step(player,event.keyCode)\n   \n    return{\n        player\n    }\n    \n    \n  }*/"],"mappings":"AAAA,SAAkCA,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS;AASvE,MAAMH,MAAM,GAACA,CAACI,MAAa,EAACC,KAAY,KAAG;EACvC,OAAO;IAACC,CAAC,EAACF,MAAM,CAACG,GAAG,CAACD,CAAC;IAAEE,CAAC,EAACJ,MAAM,CAACG,GAAG,CAACC,CAAC,GAAEJ,MAAM,CAACK,KAAK,GAAGJ;EAAM,CAAC;AAClE,CAAC;AACD,MAAMJ,QAAQ,GAACA,CAACG,MAAa,EAACC,KAAY,KAAG;EACzC,OAAO;IAACC,CAAC,EAACF,MAAM,CAACG,GAAG,CAACD,CAAC;IAAEE,CAAC,EAACJ,MAAM,CAACG,GAAG,CAACC,CAAC,GAAEJ,MAAM,CAACK,KAAK,GAAGJ;EAAM,CAAC;AAClE,CAAC;AACD,MAAMH,QAAQ,GAACA,CAACE,MAAa,EAACC,KAAY,KAAG;EACzC,OAAO;IAACC,CAAC,EAACF,MAAM,CAACG,GAAG,CAACD,CAAC,GAAEF,MAAM,CAACK,KAAK,GAAGJ,KAAM;IAACG,CAAC,EAAEJ,MAAM,CAACG,GAAG,CAACC;EAAC,CAAC;AAClE,CAAC;AACD,MAAML,SAAS,GAACA,CAACC,MAAa,EAACC,KAAY,KAAG;EAC1C,OAAO;IAACC,CAAC,EAACF,MAAM,CAACG,GAAG,CAACD,CAAC,GAAEF,MAAM,CAACK,KAAK,GAAGJ,KAAM;IAAEG,CAAC,EAACJ,MAAM,CAACG,GAAG,CAACC;EAAC,CAAC;AAClE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}